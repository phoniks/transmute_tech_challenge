/// <reference types="node" />
import { IOperationQueue, QueuedOperationModel } from '@sidetree/common';
import MongoDbBase from './MongoDbBase';
/**
 * Operation queue used by the Batch Writer implemented using MongoDB.
 */
export default class MongoDbOperationQueue extends MongoDbBase implements IOperationQueue {
    readonly collectionName = "queued-operations";
    initialize(): Promise<void>;
    enqueue(didUniqueSuffix: string, operationBuffer: Buffer): Promise<void>;
    dequeue(count: number): Promise<QueuedOperationModel[]>;
    peek(count: number): Promise<QueuedOperationModel[]>;
    /**
     * Checks to see if the queue already contains an operation for the given DID unique suffix.
     */
    contains(didUniqueSuffix: string): Promise<boolean>;
    private static convertToQueuedOperationModel;
}
