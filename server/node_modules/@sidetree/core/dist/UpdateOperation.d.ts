/// <reference types="node" />
import { DeltaModel, PublicKeyJwk, OperationModel, OperationType } from '@sidetree/common';
import Jws from './util/Jws';
interface SignedDataModel {
    delta_hash: string;
    update_key: PublicKeyJwk;
}
/**
 * A class that represents an update operation.
 */
export default class UpdateOperation implements OperationModel {
    /** The original request buffer sent by the requester. */
    readonly operationBuffer: Buffer;
    /** The unique suffix of the DID. */
    readonly didUniqueSuffix: string;
    /** The type of operation. */
    readonly type: OperationType;
    /** Signed data for the operation. */
    readonly signedDataJws: Jws;
    /** Decoded signed data payload. */
    readonly signedData: SignedDataModel;
    /** Patch data. */
    readonly delta: DeltaModel | undefined;
    /** Encoded string of the delta. */
    readonly encodedDelta: string | undefined;
    /**
     * NOTE: should only be used by `parse()` and `parseObject()` else the contructed instance could be invalid.
     */
    private constructor();
    /**
     * Parses the given input as an update operation entry in the map file.
     */
    static parseOperationFromMapFile(input: any): Promise<UpdateOperation>;
    /**
     * Parses the given buffer as a `UpdateOperation`.
     */
    static parse(operationBuffer: Buffer): Promise<UpdateOperation>;
    /**
     * Parses the given operation object as a `UpdateOperation`.
     * The `operationBuffer` given is assumed to be valid and is assigned to the `operationBuffer` directly.
     * NOTE: This method is purely intended to be used as an optimization method over the `parse` method in that
     * JSON parsing is not required to be performed more than once when an operation buffer of an unknown operation type is given.
     * @param mapFileMode If set to true, then `delta` and `type` properties are expected to be absent.
     */
    static parseObject(operationObject: any, operationBuffer: Buffer, mapFileMode: boolean): Promise<UpdateOperation>;
    private static parseSignedDataPayload;
}
export {};
