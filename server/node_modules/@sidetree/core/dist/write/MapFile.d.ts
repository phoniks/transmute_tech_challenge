/// <reference types="node" />
import { MapFileModel } from '@sidetree/common';
import UpdateOperation from '../UpdateOperation';
/**
 * Class containing Map File related operations.
 */
export default class MapFile {
    readonly model: MapFileModel;
    readonly didUniqueSuffixes: string[];
    readonly updateOperations: UpdateOperation[];
    /**
     * Class that represents a map file.
     * NOTE: this class is introduced as an internal structure in replacement to `MapFileModel`
     * to keep useful metadata so that repeated computation can be avoided.
     */
    private constructor();
    /**
     * Parses and validates the given map file buffer.
     * @throws `SidetreeError` if failed parsing or validation.
     */
    static parse(mapFileBuffer: Buffer): Promise<MapFile>;
    /**
     * Validates the given `operations` property, throws error if the property fails validation.
     */
    private static parseOperationsProperty;
    /**
     * Validates the given `chunks` property, throws error if the property fails validation.
     */
    private static validateChunksProperty;
    /**
     * Creates the Map File buffer.
     */
    static createBuffer(chunkFileHash: string, updateOperationArray: UpdateOperation[]): Promise<Buffer>;
}
