{"version":3,"file":"crypto.esm.js","sources":["../src/mnemonic/generateMnemonic.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/constants.ts","../src/mnemonic/toKeyPair.ts","../src/signature/createSigner.ts","../src/signature/createJws.ts","../src/signature/createJwsSigner.ts","../src/signature/createVerifier.ts","../src/signature/verifyJws.ts","../src/signature/createJwsVerifier.ts"],"sourcesContent":["/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as bip39 from 'bip39';\n\nexport const generateMnemonic = async (): Promise<string> => {\n  const mnemonic = await bip39.generateMnemonic();\n  return mnemonic;\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n// '0' === Bitcoin... possible default.\n// '1' === Test Net (all coins)\n\nexport const SIDETREE_BIP44_COIN_TYPE = '1';\n\nexport const crvToJwsAlg: any = {\n  secp256k1: 'ES256K',\n  Ed25519: 'EdDSA',\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as bip39 from 'bip39';\nimport hdkey from 'hdkey';\nimport { Ed25519KeyPair } from '@transmute/did-key-ed25519';\nimport { Secp256k1KeyPair } from '@transmute/did-key-secp256k1';\nimport { SIDETREE_BIP44_COIN_TYPE } from '../constants';\n\n// See https://www.iana.org/assignments/jose/jose.xhtml#web-key-elliptic-curve\nexport const toKeyPair = async (\n  mnemonic: string,\n  index: number,\n  type = 'Ed25519'\n): Promise<any> => {\n  const seed = await bip39.mnemonicToSeed(mnemonic);\n  const root = hdkey.fromMasterSeed(seed);\n  const hdPath = `m/44'/${SIDETREE_BIP44_COIN_TYPE}'/0'/0/${index}`;\n  const addrNode = root.derive(hdPath);\n\n  let keypair: any;\n\n  switch (type) {\n    case 'secp256k1': {\n      keypair = await Secp256k1KeyPair.generate({\n        secureRandom: () => {\n          return addrNode._privateKey;\n        },\n      });\n      break;\n    }\n    case 'X25519': {\n      keypair = await Ed25519KeyPair.generate({\n        secureRandom: () => {\n          return addrNode._privateKey;\n        },\n      });\n      keypair = keypair.toX25519KeyPair(true);\n      break;\n    }\n    case 'Ed25519':\n    default: {\n      keypair = await Ed25519KeyPair.generate({\n        secureRandom: () => {\n          return addrNode._privateKey;\n        },\n      });\n      break;\n    }\n  }\n\n  return keypair;\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Secp256k1KeyPair } from '@transmute/did-key-secp256k1';\nimport { Ed25519KeyPair } from '@transmute/did-key-ed25519';\n\nexport const createSigner = async (privateKeyJwk: any): Promise<any> => {\n  let key: any;\n\n  switch (privateKeyJwk.crv) {\n    case 'Ed25519': {\n      key = await Ed25519KeyPair.from({\n        publicKeyJwk: privateKeyJwk,\n        privateKeyJwk,\n      } as any);\n      break;\n    }\n    case 'secp256k1': {\n      key = await Secp256k1KeyPair.from({\n        publicKeyJwk: privateKeyJwk,\n        privateKeyJwk,\n      } as any);\n      break;\n    }\n  }\n\n  if (!key) {\n    throw new Error('Unsupported crv ' + privateKeyJwk.crv);\n  }\n\n  const signer = key.signer();\n\n  return {\n    sign: (data: Buffer) => {\n      return signer.sign({ data });\n    },\n  };\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport base64url from 'base64url';\nimport canonicalize from 'canonicalize';\n\nexport const createJws = async (signer: any, payload: any, header: object) => {\n  const encodedHeader = base64url.encode(canonicalize(header));\n  const encodedPayload = base64url.encode(canonicalize(payload));\n  const toBeSigned = `${encodedHeader}.${encodedPayload}`;\n  const signature = await signer.sign(Buffer.from(toBeSigned) as any);\n  return `${toBeSigned}.${base64url.encode(Buffer.from(signature))}`;\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createSigner } from './createSigner';\nimport { createJws } from './createJws';\nimport { crvToJwsAlg } from '../constants';\n\nexport const createJwsSigner = async (privateKeyJwk: any) => {\n  const signer = await createSigner(privateKeyJwk);\n  const alg = crvToJwsAlg[privateKeyJwk.crv];\n  return {\n    sign: async (data: Buffer) => {\n      return createJws(signer, data, { alg });\n    },\n  };\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Secp256k1KeyPair } from '@transmute/did-key-secp256k1';\nimport { Ed25519KeyPair } from '@transmute/did-key-ed25519';\n\nexport const createVerifier = async (publicKeyJwk: any): Promise<any> => {\n  let key: any;\n\n  switch (publicKeyJwk.crv) {\n    case 'Ed25519': {\n      key = await Ed25519KeyPair.from({\n        publicKeyJwk: publicKeyJwk,\n      } as any);\n      break;\n    }\n    case 'secp256k1': {\n      key = await Secp256k1KeyPair.from({\n        publicKeyJwk: publicKeyJwk,\n      } as any);\n      break;\n    }\n  }\n\n  if (!key) {\n    throw new Error('Unsupported crv ' + publicKeyJwk.crv);\n  }\n\n  const verifier = key.verifier();\n\n  return {\n    verify: (data: Buffer, signature: Buffer) => {\n      return verifier.verify({ data, signature });\n    },\n  };\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport base64url from 'base64url';\nexport const verifyJws = async (verifier: any, jws: string) => {\n  const [header, payload, signature] = jws.split('.');\n  const toBeVerified = `${header}.${payload}`;\n  const verified = await verifier.verify(\n    Buffer.from(toBeVerified),\n    base64url.toBuffer(signature)\n  );\n  return verified;\n};\n","/*\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createVerifier } from './createVerifier';\nimport { verifyJws } from './verifyJws';\n\nexport const createJwsVerifier = async (publicKeyJwk: any) => {\n  const verifier = await createVerifier(publicKeyJwk);\n  return {\n    verify: async (jws: string) => {\n      return verifyJws(verifier, jws);\n    },\n  };\n};\n"],"names":["generateMnemonic","bip39","SIDETREE_BIP44_COIN_TYPE","crvToJwsAlg","secp256k1","Ed25519","toKeyPair","mnemonic","index","type","seed","root","hdkey","fromMasterSeed","hdPath","addrNode","derive","keypair","Secp256k1KeyPair","generate","secureRandom","_privateKey","Ed25519KeyPair","toX25519KeyPair","createSigner","privateKeyJwk","key","Error","crv","signer","sign","data","from","publicKeyJwk","createJws","payload","header","encodedHeader","base64url","encode","canonicalize","encodedPayload","toBeSigned","Buffer","signature","createJwsSigner","alg","createVerifier","verifier","verify","verifyJws","jws","split","toBeVerified","toBuffer","createJwsVerifier"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;IAgBaA,gBAAgB,YAAhBA,gBAAgB;AAAA;2BACJC,kBAAA;AAExB,GAH4B;AAAA;AAAA;AAAA;;AChB7B;AACA,AAAO,MAAM,KAAK,gBAAgB,CAAC,WAAW;AAC9C,CAAC,SAAS,KAAK,GAAG,EAAE;AACpB,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,WAAW,EAAE,UAAU,EAAE;AAC1D,EAAE,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACvB,EAAE,IAAI,KAAK,EAAE;AACb,GAAG,MAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;AACzD,GAAG,IAAI,QAAQ,EAAE;AACjB,IAAI,IAAI;AACR,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,IAAI,MAAM;AACV,IAAI,OAAO,IAAI,CAAC;AAChB,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,GAAG,SAAS,KAAK,EAAE;AAC3B,GAAG,IAAI;AACP,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AAC1B,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;AACrB,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClE,KAAK,MAAM,IAAI,UAAU,EAAE;AAC3B,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C,KAAK,MAAM;AACX,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/B,KAAK;AACL,IAAI,CAAC,OAAO,CAAC,EAAE;AACf,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,IAAI;AACJ,GAAG,CAAC;AACJ,EAAE,OAAO,MAAM,CAAC;AAChB,GAAE;AACF,CAAC,OAAO,KAAK,CAAC;AACd,CAAC,GAAG,CAAC;AACL;AACA;AACA,AAAO,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AAC5C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AACd,EAAE,IAAI,KAAK,YAAY,KAAK,EAAE;AAC9B,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE;AAChB,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,KAAK,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,IAAI,MAAM;AACV,IAAI,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9C,IAAI,OAAO;AACX,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AAC3B,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5E,GAAG,OAAO;AACV,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACjB,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;AAC1B,EAAE,IAAI,QAAQ,EAAE;AAChB,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAClB,GAAG;AACH,EAAE;AACF,CAAC;AACD,AAmGA;AACA,AAAO,MAAM,eAAe,iBAAiB,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,YAAY,CAAC;AAC/J,AA2DA;AACA,AAAO,MAAM,oBAAoB,iBAAiB,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,IAAI,iBAAiB,CAAC;AACxL,AAiMA;AACA;AACA,AAAO,SAAS,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE;AAC7C,CAAC,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;AACxB,CAAC,IAAI,SAAS,CAAC;AACf,CAAC,KAAK,EAAE;AACR,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,GAAG,IAAI,IAAI,EAAE;AACb,IAAI,IAAI,SAAS,GAAG,IAAI,EAAE,CAAC;AAC3B,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,IAAI,EAAE;AACrC,KAAK,MAAM,KAAK,CAAC;AACjB,KAAK;AACL,IAAI,IAAI,SAAS,KAAK,YAAY,EAAE;AACpC,KAAK,aAAa,GAAG,CAAC,CAAC;AACvB,KAAK,MAAM;AACX,KAAK;AACL,IAAI,MAAM;AACV;AACA,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;AAC5B,GAAG,GAAG;AACN,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,IAAI,OAAO,CAAC,IAAI,EAAE;AAClB,KAAK,aAAa,EAAE,CAAC;AACrB,KAAK,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,KAAK;AACL,IAAI,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;AACxB,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC/B,KAAK,SAAS,GAAG,IAAI,CAAC;AACtB,KAAK,MAAM,KAAK,CAAC;AACjB,KAAK;AACL,IAAI,IAAI,gBAAgB,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,IAAI,aAAa,EAAE,CAAC;AACpB,IAAI,QAAQ,gBAAgB,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACrD,GAAG,OAAO,MAAM,CAAC;AACjB,GAAG;AACH,EAAE;AACF,CAAC,MAAM,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;AAC1B,CAAC,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACrG,CAAC,OAAO,IAAI,CAAC;AACb,CAAC,SAAS,gBAAgB,CAAC,KAAK,EAAE;AAClC,EAAE,SAAS;AACX,GAAG,IAAI,KAAK,KAAK,YAAY,EAAE;AAC/B,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,IAAI,MAAM;AACV,IAAI;AACJ,GAAG,IAAI,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;AAC7B,IAAI,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;AAC9B,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9B,KAAK,OAAO;AACZ,KAAK;AACL,IAAI;AACJ,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,GAAG,IAAI,IAAI,EAAE;AACb,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC;AACnB,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AAC7B,KAAK,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACvD,KAAK,OAAO;AACZ,KAAK;AACL,IAAI,MAAM;AACV,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,IAAI;AACJ,GAAG;AACH,EAAE,GAAG;AACL,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,GAAG,OAAO,CAAC,IAAI,EAAE;AACjB,IAAI,aAAa,EAAE,CAAC;AACpB,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI;AACJ,GAAG,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;AACvB,GAAG,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC9B,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACvD,IAAI,OAAO;AACX,IAAI;AACJ,GAAG,IAAI,gBAAgB,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,GAAG,aAAa,EAAE,CAAC;AACnB,GAAG,QAAQ,gBAAgB,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACpD,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC3B,EAAE;AACF,CAAC,SAAS,gBAAgB,CAAC,MAAM,EAAE;AACnC,EAAE,SAAS;AACX,GAAG,IAAI,gBAAgB,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,EAAE,EAAE;AAChD,IAAI,MAAM;AACV,IAAI;AACJ,GAAG,aAAa,EAAE,CAAC;AACnB,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,GAAG,OAAO,CAAC,IAAI,EAAE;AACjB,IAAI,aAAa,EAAE,CAAC;AACpB,IAAI,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI;AACJ,GAAG,MAAM,GAAG,IAAI,EAAE,CAAC;AACnB,GAAG,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC9B,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACvD,IAAI,OAAO;AACX,IAAI;AACJ,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC3B,EAAE;AACF,CAAC;;AC5gBD;;;;;;;;;;;;;AAcA;AACA;AACA;AAEA,AAAO,IAAMC,wBAAwB,GAAG,GAAjC;AAEP,AAAO,IAAMC,WAAW,GAAQ;AAC9BC,EAAAA,SAAS,EAAE,QADmB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAzB;;ICCMC,SAAS,YAATA,SAAS,CACpBC,QADoB,EAEpBC,KAFoB,EAGpBC,IAHoB;AAAA,MAGpBA,IAHoB;AAGpBA,IAAAA,IAHoB,GAGb,SAHa;AAAA;;AAAA;2BAKDR,cAAA,CAAqBM,QAArB,kBAAbG;AACN,UAAMC,IAAI,GAAGC,KAAK,CAACC,cAAN,CAAqBH,IAArB,CAAb;AACA,UAAMI,MAAM,cAAYZ,wBAAZ,eAA8CM,KAA1D;AACA,UAAMO,QAAQ,GAAGJ,IAAI,CAACK,MAAL,CAAYF,MAAZ,CAAjB;AAEA,UAAIG,OAAJ;;0BAEQR;eACD;;AAAa;AAAA,iCACAS,gBAAgB,CAACC,QAAjB,CAA0B;AACxCC,YAAAA,YAAY,EAAE;AACZ,qBAAOL,QAAQ,CAACM,WAAhB;AACD;AAHuC,WAA1B,CADA;AAChBJ,YAAAA,OAAO,wBAAP;AADgB;AAOjB;;eACI;;AAAU;AAAA,iCACGK,cAAc,CAACH,QAAf,CAAwB;AACtCC,YAAAA,YAAY,EAAE;AACZ,qBAAOL,QAAQ,CAACM,WAAhB;AACD;AAHqC,WAAxB,CADH;AACbJ,YAAAA,OAAO,wBAAP;AAKAA,YAAAA,OAAO,GAAGA,OAAO,CAACM,eAAR,CAAwB,IAAxB,CAAV;AANa;AAQd;;eACI;;AACI;AAAA,iCACSD,cAAc,CAACH,QAAf,CAAwB;AACtCC,YAAAA,YAAY,EAAE;AACZ,qBAAOL,QAAQ,CAACM,WAAhB;AACD;AAHqC,WAAxB,CADT;AACPJ,YAAAA,OAAO,yBAAP;AADO;AAOR;;;;AAGH,eAAOA,OAAP;WAAOA;;AACR,GA1CqB;AAAA;AAAA;AAAA,CAAf;;ACJA,IAAMO,YAAY,YAAZA,YAAY,CAAUC,aAAV;AAAA;;AAoBvB,UAAI,CAACC,GAAL,EAAU;AACR,cAAM,IAAIC,KAAJ,CAAU,qBAAqBF,aAAa,CAACG,GAA7C,CAAN;AACD;;AAED,UAAMC,MAAM,GAAGH,GAAG,CAACG,MAAJ,EAAf;AAEA,aAAO;AACLC,QAAAA,IAAI,EAAE,cAACC,IAAD;AACJ,iBAAOF,MAAM,CAACC,IAAP,CAAY;AAAEC,YAAAA,IAAI,EAAJA;AAAF,WAAZ,CAAP;AACD;AAHI,OAAP;;;;AAzBA,QAAIL,GAAJ;;yBAEQD,aAAa,CAACG;aACf;;AAAW;AAAA,+BACFN,cAAc,CAACU,IAAf,CAAoB;AAC9BC,UAAAA,YAAY,EAAER,aADgB;AAE9BA,UAAAA,aAAa,EAAbA;AAF8B,SAApB,CADE;AACdC,UAAAA,GAAG,uBAAH;AADc;AAAA;AAMf;;aACI;;AAAa;AAAA,+BACJR,gBAAgB,CAACc,IAAjB,CAAsB;AAChCC,UAAAA,YAAY,EAAER,aADkB;AAEhCA,UAAAA,aAAa,EAAbA;AAFgC,SAAtB,CADI;AAChBC,UAAAA,GAAG,wBAAH;AADgB;AAAA;AAMjB;;;;AAcJ,GA/BwB;AAAA;AAAA;AAAA,CAAlB;;ACjBP;;;;;;;;;;;;;AAcA,AAGO,IAAMQ,SAAS,YAATA,SAAS,CAAUL,MAAV,EAAuBM,OAAvB,EAAqCC,MAArC;AAAA;AACpB,QAAMC,aAAa,GAAGC,SAAS,CAACC,MAAV,CAAiBC,YAAY,CAACJ,MAAD,CAA7B,CAAtB;AACA,QAAMK,cAAc,GAAGH,SAAS,CAACC,MAAV,CAAiBC,YAAY,CAACL,OAAD,CAA7B,CAAvB;AACA,QAAMO,UAAU,GAAML,aAAN,SAAuBI,cAAvC;2BACwBZ,MAAM,CAACC,IAAP,CAAYa,MAAM,CAACX,IAAP,CAAYU,UAAZ,CAAZ,kBAAlBE;AACN,aAAUF,UAAV,SAAwBJ,SAAS,CAACC,MAAV,CAAiBI,MAAM,CAACX,IAAP,CAAYY,SAAZ,CAAjB,CAAxB;;AACD,GANqB;AAAA;AAAA;AAAA,CAAf;;ACjBP;;;;;;;;;;;;;AAcA,IAIaC,eAAe,YAAfA,eAAe,CAAUpB,aAAV;AAAA;2BACLD,YAAY,CAACC,aAAD,kBAA3BI;AACN,UAAMiB,GAAG,GAAG3C,WAAW,CAACsB,aAAa,CAACG,GAAf,CAAvB;AACA,aAAO;AACLE,QAAAA,IAAI,YAASC,IAAT;AAAA;AACF,mCAAOG,SAAS,CAACL,MAAD,EAASE,IAAT,EAAe;AAAEe,cAAAA,GAAG,EAAHA;AAAF,aAAf,CAAhB;AACD,WAFG;AAAA;AAAA;AAAA;AADC,OAAP;;AAKD,GAR2B;AAAA;AAAA;AAAA,CAArB;;ACDA,IAAMC,cAAc,YAAdA,cAAc,CAAUd,YAAV;AAAA;;AAkBzB,UAAI,CAACP,GAAL,EAAU;AACR,cAAM,IAAIC,KAAJ,CAAU,qBAAqBM,YAAY,CAACL,GAA5C,CAAN;AACD;;AAED,UAAMoB,QAAQ,GAAGtB,GAAG,CAACsB,QAAJ,EAAjB;AAEA,aAAO;AACLC,QAAAA,MAAM,EAAE,gBAAClB,IAAD,EAAea,SAAf;AACN,iBAAOI,QAAQ,CAACC,MAAT,CAAgB;AAAElB,YAAAA,IAAI,EAAJA,IAAF;AAAQa,YAAAA,SAAS,EAATA;AAAR,WAAhB,CAAP;AACD;AAHI,OAAP;;;;AAvBA,QAAIlB,GAAJ;;yBAEQO,YAAY,CAACL;aACd;;AAAW;AAAA,+BACFN,cAAc,CAACU,IAAf,CAAoB;AAC9BC,UAAAA,YAAY,EAAEA;AADgB,SAApB,CADE;AACdP,UAAAA,GAAG,uBAAH;AADc;AAAA;AAKf;;aACI;;AAAa;AAAA,+BACJR,gBAAgB,CAACc,IAAjB,CAAsB;AAChCC,UAAAA,YAAY,EAAEA;AADkB,SAAtB,CADI;AAChBP,UAAAA,GAAG,wBAAH;AADgB;AAAA;AAKjB;;;;AAcJ,GA7B0B;AAAA;AAAA;AAAA,CAApB;;ACjBP;;;;;;;;;;;;;AAcA,AACO,IAAMwB,SAAS,YAATA,SAAS,CAAUF,QAAV,EAAyBG,GAAzB;AAAA;qBACiBA,GAAG,CAACC,KAAJ,CAAU,GAAV;QAA9BhB;QAAQD;QAASS;;AACxB,QAAMS,YAAY,GAAMjB,MAAN,SAAgBD,OAAlC;2BACuBa,QAAQ,CAACC,MAAT,CACrBN,MAAM,CAACX,IAAP,CAAYqB,YAAZ,CADqB,EAErBf,SAAS,CAACgB,QAAV,CAAmBV,SAAnB,CAFqB;AAKxB,GARqB;AAAA;AAAA;AAAA,CAAf;;ACfP;;;;;;;;;;;;;AAcA,IAGaW,iBAAiB,YAAjBA,iBAAiB,CAAUtB,YAAV;AAAA;2BACLc,cAAc,CAACd,YAAD,kBAA/Be;AACN,aAAO;AACLC,QAAAA,MAAM,YAASE,GAAT;AAAA;AACJ,mCAAOD,SAAS,CAACF,QAAD,EAAWG,GAAX,CAAhB;AACD,WAFK;AAAA;AAAA;AAAA;AADD,OAAP;;AAKD,GAP6B;AAAA;AAAA;AAAA,CAAvB;;;;"}