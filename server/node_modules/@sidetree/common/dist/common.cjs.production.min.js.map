{"version":3,"file":"common.cjs.production.min.js","sources":["../src/enums/FetchResultCode.ts","../src/enums/OperationType.ts","../src/enums/PublicKeyPurpose.ts","../src/enums/ResponseStatus.ts","../src/enums/TransactionProcessingStatus.ts","../src/errors/ErrorCode.ts","../src/errors/SidetreeError.ts","../src/util/parameters.ts","../src/util/AnchoredDataSerializer.ts","../src/util/Encoder.ts","../src/util/JsonCanonicalizer.ts","../src/util/Multihash.ts","../src/util/ReadableStream.ts","../src/util/SortedArray.ts","../src/errors/CoreErrorCode.ts","../src/errors/SharedErrorCode.ts"],"sourcesContent":["/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Return code for a content fetch.\n */\nenum FetchResultCode {\n  CasNotReachable = 'cas_not_reachable',\n  InvalidHash = 'content_hash_invalid',\n  MaxSizeExceeded = 'content_exceeds_maximum_allowed_size',\n  MaxSizeNotSpecified = 'content_max_size_not_specified',\n  NotAFile = 'content_not_a_file',\n  NotFound = 'content_not_found',\n  Success = 'success',\n}\n\nexport default FetchResultCode;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sidetree operation types.\n */\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover',\n}\n\nexport default OperationType;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sidetree public key purpose.\n */\nenum PublicKeyPurpose {\n  Auth = 'auth',\n  General = 'general',\n  KeyAgreement = 'agreement',\n  AssertionMethod = 'assertion',\n  CapabilityDelegation = 'delegation',\n  CapabilityInvocation = 'invocation',\n}\n\nexport default PublicKeyPurpose;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Possible Sidetree response status.\n */\nenum ResponseStatus {\n  BadRequest = 'bad-request',\n  NotFound = 'not-found',\n  ServerError = 'server-error',\n  Succeeded = 'succeeded',\n}\n\nexport default ResponseStatus;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The state of a transaction that is being processed.\n */\nenum TransactionProcessingStatus {\n  Pending = 'pending',\n  Processed = 'processed',\n}\n\nexport default TransactionProcessingStatus;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error codes used ONLY by this version of the protocol.\n */\nexport default {\n  AnchoredDataIncorrectFormat: 'anchored_data_incorrect_format',\n  AnchoredDataNumberOfOperationsGreaterThanMax:\n    'anchored_data_number_of_operations_greater_than_max',\n  AnchoredDataNumberOfOperationsNotPositiveInteger:\n    'anchored_data_number_of_operations_not_positive_integer',\n  AnchorFileCreatePropertyNotArray: 'anchor_file_create_property_not_array',\n  AnchorFileDecompressionFailure: 'anchor_file_decompression_failed',\n  AnchorFileHasUnknownProperty: 'anchor_file_has_unknown_property',\n  AnchorFileMapFileHashMissing: 'anchor_file_map_file_hash_missing',\n  AnchorFileMapFileHashNotString: 'anchor_file_map_file_hash_not_string',\n  AnchorFileMapFileHashUnsupported: 'anchor_file_map_file_hash_unsupported',\n  AnchorFileMissingOperationsProperty:\n    'anchor_file_did_unique_suffixes_missing',\n  AnchorFileMultipleOperationsForTheSameDid:\n    'anchor_file_multiple_operations_for_the_same_did',\n  AnchorFileNotJson: 'anchor_file_not_json',\n  AnchorFileOperationCountExceededPaidLimit:\n    'anchor_file_operation_count_exceeded_paid_limit',\n  AnchorFileRecoverPropertyNotArray: 'anchor_file_recover_property_not_array',\n  AnchorFileDeactivatePropertyNotArray:\n    'anchor_file_deactivate_property_not_array',\n  AnchorFileUnexpectedPropertyInOperations:\n    'anchor_file_unexpected_property_in_operations',\n  AnchorFileWriterLockIPropertyNotString:\n    'anchor_file_writer_lock_id_property_not_string',\n  BatchWriterAlreadyHasOperationForDid:\n    'batch_writer_already_has_operation_for_did',\n  CasFileHashNotValid: 'cas_file_hash_not_valid',\n  CasFileNotAFile: 'cas_file_not_a file',\n  CasFileNotFound: 'cas_file_not_found',\n  CasFileTooLarge: 'cas_file_too_large',\n  CasNotReachable: 'cas_not_reachable',\n  ChunkFileDeltaSizeExceedsLimit: 'chunk_file_delta_size_exceeds_limit',\n  ChunkFileDeltasNotArrayOfStrings: 'chunk_file_deltas_not_array_of_string',\n  ChunkFileDeltasPropertyNotArray: 'chunk_file_deltas_property_not_array',\n  ChunkFileUnexpectedProperty: 'chunk_file_unexpected_property',\n  CreateOperationMissingOrUnknownProperty:\n    'create_operation_missing_or_unknown_property',\n  CreateOperationSuffixDataMissingOrNotString:\n    'create_operation_suffix_data_missing_or_not_string',\n  CreateOperationSuffixDataMissingOrUnknownProperty:\n    'create_operation_suffix_data_missing_or_unknown_property',\n  CreateOperationTypeIncorrect: 'create_operation_type_incorrect',\n  DeltaMissingOrNotString: 'delta_missting_or_not_string',\n  DeltaMissingOrUnknownProperty: 'delta_missing_or_unknown_property',\n  DidIncorrectPrefix: 'did_incorrect_prefix',\n  DidInitialStateValueContainsMoreThanOneDot:\n    'did_initial_state_value_contains_more_than_one_dot',\n  DidInitialStateValueContainsNoDot: 'did_initial_state_value_contains_no_dot',\n  DidInitialStateValueDoesNotContainTwoParts:\n    'did_initial_state_value_does_not_contain_two_parts',\n  DidInvalidDidString: 'did_invalid_did_string',\n  DidLongFormNoInitialStateFound: 'did_long_form_no_initial_state_found',\n  DidLongFormOnlyInitialStateParameterIsAllowed:\n    'did_long_form_only_initial_values_parameter_is_allowed',\n  DidLongFormOnlyOneQueryParamAllowed:\n    'did_long_form_only_one_query_param_allowed',\n  DidNoUniqueSuffix: 'did_no_unique_suffix',\n  DidUniqueSuffixFromInitialStateMismatch:\n    'did_unique_suffix_from_initial_state_mismatch',\n  DocumentComposerDocumentMissing: 'document_composer_document_missing',\n  DocumentComposerIdNotString: 'document_composer_id_not_string',\n  DocumentComposerIdNotUsingBase64UrlCharacterSet:\n    'document_composer_id_not_using_base_64_url_character_set',\n  DocumentComposerIdTooLong: 'document_composer_id_too_long',\n  DocumentComposerInvalidSignature: 'document_composer_invalid_signature',\n  DocumentComposerPatchMissingOrUnknownAction:\n    'document_composer_patch_missing_or_unknown_action',\n  DocumentComposerPatchMissingOrUnknownProperty:\n    'document_composer_patch_missing_or_unknown_property',\n  DocumentComposerPatchPublicKeyIdNotString:\n    'document_composer_patch_public_key_id_not_string',\n  DocumentComposerPatchPublicKeyIdsNotArray:\n    'document_composer_patch_public_keys_ids_not_array',\n  DocumentComposerPatchServiceEndpointNotString:\n    'document_composer_patch_service_endpoint_not_string',\n  DocumentComposerPatchServiceEndpointsNotArray:\n    'document_composer_patch_service_endpoints_not_array',\n  DocumentComposerPatchServiceTypeMissingOrUnknown:\n    'document_composer_patch_service_type_missing_or_unknown',\n  DocumentComposerPublicKeyIdDuplicated:\n    'document_composer_public_key_id_duplicated',\n  DocumentComposerPublicKeyJwkMissingOrIncorrectType:\n    'document_composer_public_key_jwk_missing_or_incorrect_type',\n  DocumentComposerPublicKeyMissingOrUnknownProperty:\n    'document_composer_public_key_missing_or_unknown_property',\n  DocumentComposerPublicKeysNotArray: 'document_composer_public_keys_not_array',\n  DocumentComposerPublicKeyTypeMissingOrIncorrectType:\n    'document_composer_public_key_type_missing_or_incorrect_type',\n  DocumentComposerPublicKeyPurposeMissingOrUnknown:\n    'document_composer_public_key_purpose_missing_or_unknown',\n  DocumentComposerPublicKeyPurposeExceedsMaxLength:\n    'document_composer_public_key_purpose_exceeds_max_length',\n  DocumentComposerPublicKeyInvalidPurpose:\n    'document_composer_public_key_invalid_purpose',\n  DocumentComposerPatchServiceEndpointIdsNotArray:\n    'document_composer_service_endpoint_ids_not_array',\n  DocumentComposerPatchServiceEndpointServiceEndpointNotString:\n    'document_composer_service_endpoint_service_endpoint_not_string',\n  DocumentComposerPatchServiceEndpointServiceEndpointNotValidUrl:\n    'document_composer_service_endpoint_service_endpoint_not_valid_url',\n  DocumentComposerPatchServiceEndpointServiceEndpointTooLong:\n    'document_composer_service_endpoint_service_endpoint_too_long',\n  DocumentComposerPatchServiceEndpointTypeNotString:\n    'document_composer_service_endpoint_type_not_string',\n  DocumentComposerPatchServiceEndpointTypeTooLong:\n    'document_composer_service_endpoint_type_too_long',\n  DocumentComposerServiceEndpointMissingOrUnknownProperty:\n    'document_composer_service_endpoint_missing_or_unknown_property',\n  DocumentComposerServiceNotArray: 'document_composer_service_not_array',\n  DocumentComposerUnknownPropertyInDocument:\n    'document_composer_unknown_property_in_document',\n  DocumentComposerUpdateOperationDocumentPatchesNotArray:\n    'document_composer_update_operation_document_patch_not_array',\n  DocumentIncorretEncodedFormat: 'document_incorrect_encoded_format',\n  DocumentNotJson: 'document_not_json',\n  DocumentNotValidOriginalDocument: 'document_not_valid_original_document',\n  EncoderValidateBase64UrlStringInputNotBase64UrlString:\n    'encoder_validate_base64url_string_input_not_base64url_string',\n  EncoderValidateBase64UrlStringInputNotString:\n    'encoder_validate_base64url_string_input_not_string',\n  JwkHasUnknownProperty: 'jwk_has_unknown_property',\n  JwkMissingOrInvalidCrv: 'jwk_missing_or_invalid_crv',\n  JwkMissingOrInvalidKty: 'jwk_missing_or_invalid_kty',\n  JwkMissingOrInvalidTypeX: 'jwk_missing_or_invalid_type_x',\n  JwkMissingOrInvalidTypeY: 'jwk_missing_or_invalid_type_y',\n  JwkUndefined: 'jwk_undefined',\n  JwsCompactJwsInvalid: 'jws_compact_jws_invalid',\n  JwsCompactJwsNotString: 'jws_compact_jws_not_string',\n  JwsFailedSignatureValidation: 'jws_failed_signature_validation',\n  JwsPayloadNotBase64UrlString: 'jws_payload_not_base64url_string',\n  JwsProtectedHeaderMissingOrIncorrectAlg:\n    'jws_protected_header_missing_or_incorrect_alg',\n  JwsProtectedHeaderMissingOrUnknownProperty:\n    'jws_protected_header_missing_or_unknown_property',\n  JwsSignatureNotBase64UrlString: 'jws_signature_not_base64url_string',\n  MapFileChunkHasMissingOrUnknownProperty:\n    'map_file_chunk_has_missing_or_unknown_property',\n  MapFileChunksPropertyDoesNotHaveExactlyOneElement:\n    'map_file_chunks_property_does_not_have_exactly_one_element',\n  MapFileChunksPropertyMissingOrIncorrectType:\n    'map_file_chunks_property_missing_or_incorrect_type',\n  MapFileDecompressionFailure: 'map_file_decompression_failure',\n  MapFileHasUnknownProperty: 'map_file_has_unknown_property',\n  MapFileMultipleOperationsForTheSameDid:\n    'map_file_multiple_operations_for_the_same_did',\n  MapFileNotJson: 'map_file_not_json',\n  MapFileOperationsPropertyHasMissingOrUnknownProperty:\n    'map_file_operations_property_has_missing_or_unknown_property',\n  MapFileUpdateOperationsNotArray: 'map_file_update_operations_not_array',\n  MultihashNotLatestSupportedHashAlgorithm:\n    'multihash_not_latest_supported_hash_algorithm',\n  MultihashUnsupportedHashAlgorithm: 'multihash_unsupported_hash_algorithm',\n  OperationCreateInvalidDidDocument: 'operation_create_invalid_did_document',\n  OperationCountLessThanZero: 'operation_count_less_than_zero',\n  OperationCreatePayloadHasMissingOrInvalidNextRecoveryCommitment:\n    'operation_create_payload_has_missing_or_invalid_next_recovery_commitment',\n  OperationCreatePayloadHasMissingOrInvalidNextUpdateCommitment:\n    'operation_create_payload_has_missing_or_invalid_next_update_commitment',\n  OperationCreatePayloadMissingOrUnknownProperty:\n    'operation_create_payload_missing_or_unknown_property',\n  OperationDocumentPatchesMissing: 'operation_document_patches_missing',\n  OperationPayloadMissingOrIncorrectType:\n    'operation_payload_missing_or_incorrect_type',\n  OperationProcessorCreateOperationDoesNotHaveRevealValue:\n    'operation_processor_create_operation_does_not_have_reveal_value',\n  OperationProcessorUnknownOperationType:\n    'operation_processor_unknown_operation_type',\n  OperationTypeUnknownOrMissing: 'operation_type_unknown_or_missing',\n  QueueingMultipleOperationsPerDidNotAllowed:\n    'queueing_multiple_operations_per_did_not_allowed',\n  RecoverOperationMissingOrInvalidDidUniqueSuffix:\n    'recover_operation_missing_or_invalid_did_unique_suffix',\n  RecoverOperationMissingOrUnknownProperty:\n    'recover_operation_missing_or_unknown_property',\n  RecoverOperationSignedDataMissingOrUnknownProperty:\n    'recover_operation_signed_data_missing_or_unknown_property',\n  RecoverOperationTypeIncorrect: 'recover_operation_type_incorrect',\n  RequestHandlerDeltaExceedsMaximumSize:\n    'request_handler_patch_data_exceeds_maximum_size',\n  RequestHandlerUnknownOperationType: 'request_handler_unknown_operation_type',\n  DeactivateOperationMissingOrInvalidDidUniqueSuffix:\n    'deactivate_operation_missing_or_invalid_did_unique_suffix',\n  DeactivateOperationMissingOrUnknownProperty:\n    'deactivate_operation_missing_or_unknown_property',\n  DeactivateOperationSignedDataMissingOrUnknownProperty:\n    'deactivate_operation_signed_data_missing_or_unknown_property',\n  DeactivateOperationSignedDidUniqueSuffixMismatch:\n    'deactivate_operation_signed_did_unique_suffix_mismatch',\n  DeactivateOperationTypeIncorrect: 'deactivate_operation_type_incorrect',\n  TransactionFeePaidInvalid: 'transaction_fee_paid_is_invalid',\n  TransactionFeePaidLessThanNormalizedFee:\n    'transaction_fee_paid_less_than_normalized_fee',\n  TransactionProcessorPaidOperationCountExceedsLimit:\n    'transaction_processor_paid_operation_count_exceeds_limit',\n  TransactionsNotInSameBlock: 'transactions_not_in_same_block',\n  UpdateOperationMissingDidUniqueSuffix:\n    'update_operation_missing_did_unique_suffix',\n  UpdateOperationMissingOrUnknownProperty:\n    'update_operation_missing_or_unknown_property',\n  UpdateOperationSignedDataHasMissingOrUnknownProperty:\n    'update_operation_signed_data_has_missing_or_unknown_property',\n  UpdateOperationTypeIncorrect: 'update_operation_type_incorrect',\n  ValueTimeLockVerifierInvalidNumberOfOperations:\n    'value_time_lock_verifierInvalid_number_of_operations',\n  ValueTimeLockVerifierTransactionTimeOutsideLockRange:\n    'value_time_lock_verifiertarget_transaction_time_outside_lock_range',\n  ValueTimeLockVerifierTransactionWriterLockOwnerMismatch:\n    'value_time_lock_verifiertransaction_owner_lock_writer_mismatch',\n};\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Standardized error class for throwing generic errors internal to this project.\n * NOTE: Not to be confused with RequestError which is used as a response to external requests.\n */\nexport default class SidetreeError extends Error {\n  constructor(public code: string, message?: string) {\n    super(message ? `${code}: ${message}` : code);\n\n    // NOTE: Extending 'Error' breaks prototype chain since TypeScript 2.1.\n    // The following line restores prototype chain.\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n  /**\n   * Returns a new SidetreeError object using the inputs.\n   *\n   * @param code The error code.\n   * @param err The error exception thrown.\n   */\n  public static createFromError(code: string, err: Error): SidetreeError {\n    return new SidetreeError(code, err ? err.message : undefined);\n  }\n\n  /**\n   * Converts the given `Error` into a string.\n   */\n  public static stringify(error: Error) {\n    return JSON.stringify(error, Object.getOwnPropertyNames(error));\n  }\n}\n","﻿/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ProtocolParameters from '../models/ProtocolParameters';\n\n/**\n * Defines the list of protocol parameters, intended ONLY to be used within each version of Sidetree.\n */\nconst protocolParameters: ProtocolParameters = {\n  hashAlgorithmInMultihashCode: 18,\n  maxAnchorFileSizeInBytes: 1000000,\n  maxChunkFileSizeInBytes: 20000000,\n  maxDeltaSizeInBytes: 1000,\n  maxMapFileSizeInBytes: 1000000,\n  maxNumberOfOperationsForNoValueTimeLock: 100,\n  maxNumberOfOperationsPerTransactionTime: 600000,\n  maxNumberOfTransactionsPerTransactionTime: 300,\n  maxOperationsPerBatch: 10000,\n  normalizedFeeToPerOperationFeeMultiplier: 0.01,\n  valueTimeLockAmountMultiplier: 600,\n};\nexport default protocolParameters;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnchoredData } from '../models';\nimport { ErrorCode, SidetreeError } from '../errors';\nimport protocolParameters from './parameters';\n\n/**\n * Encapsulates functionality to serialize/deserialize data that read/write to\n * the blockchain.\n */\nexport default class AnchoredDataSerializer {\n  /** Delimiter between logical parts in anchor string. */\n  public static readonly delimiter = '.';\n\n  /**\n   * Converts the given inputs to the string that is to be written to the blockchain.\n   *\n   * @param dataToBeAnchored The data to serialize.\n   */\n  public static serialize(dataToBeAnchored: AnchoredData): string {\n    // Concatenate the inputs w/ the delimiter and return\n    const anchorString = `${dataToBeAnchored.numberOfOperations}${AnchoredDataSerializer.delimiter}${dataToBeAnchored.anchorFileHash}`;\n    return anchorString;\n  }\n\n  /**\n   * Deserializes the given string that is read from the blockchain into data.\n   *\n   * @param serializedData The data to be deserialized.\n   */\n  public static deserialize(serializedData: string): AnchoredData {\n    const splitData = serializedData.split(AnchoredDataSerializer.delimiter);\n\n    if (splitData.length !== 2) {\n      throw new SidetreeError(\n        ErrorCode.AnchoredDataIncorrectFormat,\n        `Input is not in correct format: ${serializedData}`\n      );\n    }\n\n    const numberOfOperations = AnchoredDataSerializer.parsePositiveInteger(\n      splitData[0]\n    );\n\n    if (numberOfOperations > protocolParameters.maxOperationsPerBatch) {\n      throw new SidetreeError(\n        ErrorCode.AnchoredDataNumberOfOperationsGreaterThanMax,\n        `Number of operations ${numberOfOperations} must be less than or equal to ${protocolParameters.maxOperationsPerBatch}`\n      );\n    }\n\n    return {\n      anchorFileHash: splitData[1],\n      numberOfOperations: numberOfOperations,\n    };\n  }\n\n  private static parsePositiveInteger(input: string): number {\n    // NOTE:\n    // /<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // [1-9] denotes leading '0' not allowed.\n    // \\d* denotes followed by 0 or more decimal digits.\n    const isPositiveInteger = /^[1-9]\\d*$/.test(input);\n\n    if (!isPositiveInteger) {\n      throw new SidetreeError(\n        ErrorCode.AnchoredDataNumberOfOperationsNotPositiveInteger,\n        `Number of operations '${input}' is not a positive integer without leading zeros.`\n      );\n    }\n\n    return Number(input);\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport base64url from 'base64url';\nimport ErrorCode from '../errors/ErrorCode';\nimport SidetreeError from '../errors/SidetreeError';\n\n/**\n * Class that encodes binary blobs into strings.\n * Note that the encode/decode methods may change underlying encoding scheme.\n */\nexport default class Encoder {\n  /**\n   * Encodes given Buffer into a Base64URL string.\n   */\n  public static encode(content: Buffer | string): string {\n    const encodedContent = base64url.encode(content);\n    return encodedContent;\n  }\n\n  /**\n   * Decodes the given Base64URL string into a Buffer.\n   */\n  public static decodeAsBuffer(encodedContent: string): Buffer {\n    Encoder.validateBase64UrlString(encodedContent);\n\n    const content = base64url.toBuffer(encodedContent);\n    return content;\n  }\n\n  /**\n   * Decodes the given input into the original string.\n   */\n  public static decodeAsString(encodedContent: string): string {\n    return Encoder.decodeBase64UrlAsString(encodedContent);\n  }\n\n  /**\n   * Decodes the given Base64URL string into the original string.\n   */\n  public static decodeBase64UrlAsString(input: string): string {\n    Encoder.validateBase64UrlString(input);\n\n    const content = base64url.decode(input);\n    return content;\n  }\n\n  /**\n   * Validates if the given input is a Base64URL string.\n   * undefined is considered not a valid Base64URL string.\n   * NOTE: input is `any` type to handle cases when caller passes input directly from JSON.parse() as `any`.\n   * @throws SidetreeError if input is not a Base64URL string.\n   */\n  private static validateBase64UrlString(input: any) {\n    if (typeof input !== 'string') {\n      throw new SidetreeError(\n        ErrorCode.EncoderValidateBase64UrlStringInputNotString,\n        `Input '${input}' not a string.`\n      );\n    }\n\n    const isBase64UrlString = Encoder.isBase64UrlString(input);\n    if (!isBase64UrlString) {\n      throw new SidetreeError(\n        ErrorCode.EncoderValidateBase64UrlStringInputNotBase64UrlString,\n        `Input '${input}' not a Base64URL string.`\n      );\n    }\n  }\n\n  /**\n   * Tests if the given string is a Base64URL string.\n   */\n  public static isBase64UrlString(input: string): boolean {\n    // NOTE:\n    // '/<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // + denotes one or more characters.\n    const isBase64UrlString = /^[A-Za-z0-9_-]+$/.test(input);\n    return isBase64UrlString;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst canonicalize = require('canonicalize');\n\n/**\n * Class containing reusable JSON canonicalization operations using JSON Canonicalization Scheme (JCS).\n */\nexport default class JsonCanonicalizer {\n  /**\n   * Canonicalizes the given content as a UTF8 buffer.\n   */\n  public static canonicalizeAsBuffer(content: object): Buffer {\n    const canonicalizedString: string = canonicalize(content);\n    const contentBuffer = Buffer.from(canonicalizedString);\n    return contentBuffer;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as crypto from 'crypto';\nimport Encoder from './Encoder';\nimport ErrorCode from '../errors/ErrorCode';\nimport JsonCanonicalizer from './JsonCanonicalizer';\nimport ProtocolParameters from './parameters';\nimport SidetreeError from '../errors/SidetreeError';\n\nconst multihashes = require('multihashes');\n\n/**\n * Class that performs hashing operations using the multihash format.\n */\nexport default class Multihash {\n  /**\n   * Hashes the content using the hashing algorithm specified.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use. If not given, latest supported hashing algorithm will be used.\n   */\n  public static hash(\n    content: Buffer,\n    hashAlgorithmInMultihashCode?: number\n  ): Buffer {\n    if (hashAlgorithmInMultihashCode === undefined) {\n      hashAlgorithmInMultihashCode =\n        ProtocolParameters.hashAlgorithmInMultihashCode;\n    }\n\n    let hash;\n    switch (hashAlgorithmInMultihashCode) {\n      case 18: // SHA256\n        hash = crypto\n          .createHash('sha256') // SHA256\n          .update(content)\n          .digest();\n        break;\n      default:\n        throw new SidetreeError(ErrorCode.MultihashUnsupportedHashAlgorithm);\n    }\n\n    const hashAlgorithmName = multihashes.codes[hashAlgorithmInMultihashCode];\n    const multihash = multihashes.encode(hash, hashAlgorithmName);\n\n    return multihash;\n  }\n\n  /**\n   * Canonicalize the given content, then multihashes the result using the lastest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static canonicalizeThenHashThenEncode(content: object) {\n    const contentBuffer = JsonCanonicalizer.canonicalizeAsBuffer(content);\n    const multihashEncodedString = Multihash.hashThenEncode(\n      contentBuffer,\n      ProtocolParameters.hashAlgorithmInMultihashCode\n    );\n    return multihashEncodedString;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified then codes the multihash buffer.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static hashThenEncode(\n    content: Buffer,\n    hashAlgorithmInMultihashCode: number\n  ): string {\n    const multihashBuffer = Multihash.hash(\n      content,\n      hashAlgorithmInMultihashCode\n    );\n    const multihashEncodedString = Encoder.encode(multihashBuffer);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Given a multihash, returns the code of the hash algorithm used.\n   * @throws `SidetreeError` if hash algorithm used for the given multihash is unsupported.\n   */\n  public static getHashAlgorithmCode(multihashBuffer: Buffer): number {\n    const multihash = multihashes.decode(multihashBuffer);\n\n    // Hash algorithm must be SHA-256.\n    if (multihash.code !== 18) {\n      throw new SidetreeError(ErrorCode.MultihashUnsupportedHashAlgorithm);\n    }\n\n    return multihash.code;\n  }\n\n  /**\n   * Verifies that the given hash is a multihash computed using the latest supported hash algorithm known to this version of code.\n   * @throws `SidetreeError` if the given hash is not a multihash computed using the latest supported hash algorithm.\n   */\n  public static verifyHashComputedUsingLatestSupportedAlgorithm(hash: Buffer) {\n    const latestSupportedHashAlgorithmCode = 18;\n    const isLatestSupportedHashFormat = Multihash.isComputedUsingHashAlgorithm(\n      hash,\n      latestSupportedHashAlgorithmCode\n    ); // SHA-256.\n\n    if (!isLatestSupportedHashFormat) {\n      throw new SidetreeError(\n        ErrorCode.MultihashNotLatestSupportedHashAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Checks if the given hash is a multihash with the expected hashing algorithm.\n   */\n  public static isComputedUsingHashAlgorithm(\n    hash: Buffer,\n    expectedHashAlgorithmInMultihashCode: number\n  ): boolean {\n    try {\n      const multihash = multihashes.decode(hash);\n      return multihash.code === expectedHashAlgorithmInMultihashCode;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Verifies the given content against the given multihash.\n   */\n  public static isValidHash(\n    encodedContent: string | undefined,\n    encodedMultihash: string\n  ): boolean {\n    if (encodedContent === undefined) {\n      return false;\n    }\n\n    try {\n      const contentBuffer = Encoder.decodeAsBuffer(encodedContent);\n      return Multihash.verify(contentBuffer, encodedMultihash);\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  /**\n   * Canonicalizes the given content object, then verifies the multihash against the canonicalized string as a UTF8 buffer.\n   */\n  public static canonicalizeAndVerify(\n    content: object | undefined,\n    encodedMultihash: string\n  ): boolean {\n    if (content === undefined) {\n      return false;\n    }\n\n    try {\n      const contentBuffer = JsonCanonicalizer.canonicalizeAsBuffer(content);\n\n      return Multihash.verify(contentBuffer, encodedMultihash);\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  /**\n   * Verifies the multihash against the content `Buffer`.\n   */\n  private static verify(content: Buffer, encodedMultihash: string): boolean {\n    try {\n      const multihashBuffer = Encoder.decodeAsBuffer(encodedMultihash);\n\n      const hashAlgorithmCode = Multihash.getHashAlgorithmCode(multihashBuffer);\n      const actualHashBuffer = Multihash.hash(content, hashAlgorithmCode);\n\n      if (Buffer.compare(actualHashBuffer, multihashBuffer) !== 0) {\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * ReadableStream utilities\n */\nexport default class ReadableStream {\n  /**\n   * Given a readable stream, reads all data until end or error\n   * @param stream Fetch readable stream to read\n   * @returns a Buffer of the readable stream data\n   */\n  public static async readAll(stream: NodeJS.ReadableStream): Promise<Buffer> {\n    // Set callback for the 'readable' event to concatenate chunks of the readable stream.\n    let content: Buffer = Buffer.alloc(0);\n\n    stream.on('readable', () => {\n      // NOTE: Cast to any is to work-around incorrect TS definition for read() where\n      // `null` should be a possible return type but is not defined in @types/node: 10.12.18.\n      let chunk = stream.read() as any;\n      while (chunk !== null) {\n        content = Buffer.concat([content, chunk]);\n        chunk = stream.read();\n      }\n    });\n\n    // Create a promise to wrap the successful/failed read events.\n    const readBody = new Promise((resolve, reject) => {\n      stream.on('end', resolve);\n      stream.on('error', reject);\n    });\n\n    // Wait until the read is completed.\n    await readBody;\n\n    return content;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class containing reusable sorted array operations.\n */\nexport default class SortedArray {\n  /**\n   * Performs binary search on an item against the given sorted array using the given compare function.\n   * @returns Returns the index of the item if found; `undefined` otherwise.\n   */\n  public static binarySearch<T1, T2>(\n    sortedArray: Array<T1>,\n    searchItem: T2,\n    compare: (item1: T1, item2: T2) => number\n  ): number | undefined {\n    let lowerBoundaryIndex = 0;\n    let upperBoundaryIndex = sortedArray.length - 1;\n    let middleIndex = 0;\n    while (lowerBoundaryIndex <= upperBoundaryIndex) {\n      middleIndex = Math.floor((lowerBoundaryIndex + upperBoundaryIndex) / 2);\n\n      const comparisonResult = compare(sortedArray[middleIndex], searchItem);\n      if (comparisonResult > 0) {\n        // If value pointed by middleIndex is greater than the searchItem:\n        upperBoundaryIndex = middleIndex - 1;\n      } else if (comparisonResult < 0) {\n        // If value pointed by middleIndex is smaller than the searchItem:\n        lowerBoundaryIndex = middleIndex + 1;\n      } else {\n        // Else we've found the item.\n        return middleIndex;\n      }\n    }\n\n    return undefined;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error codes used by Sidetree core service.\n */\nexport default {\n  BlockchainGetFeeResponseNotOk: 'blockchain_get_fee_response_not_ok',\n  BlockchainGetLatestTimeResponseNotOk:\n    'blockchain_get_latest_time_response_not_ok',\n  BlockchainGetLockResponseNotOk: 'blockchain_get_lock_response_not_ok',\n  BlockchainGetWriterLockResponseNotOk:\n    'blockchain_get_writer_lock_response_not_ok',\n  BlockchainReadInvalidArguments: 'blockchain_read_invalid_arguments',\n  BlockchainReadResponseNotOk: 'blockchain_read_response_not_ok',\n  BlockchainWriteResponseNotOk: 'blockchain_write_response_not_ok',\n  VersionManagerBatchWriterNotFound: 'version_manager_batch_writer_not_found',\n  VersionManagerDocumentComposerNotFound:\n    'version_manager_document_composer_not_found',\n  VersionManagerOperationProcessorNotFound:\n    'version_manager_operation_processor_not_found',\n  VersionManagerRequestHandlerNotFound:\n    'version_manager_request_handler_not_found',\n  VersionManagerTransactionProcessorNotFound:\n    'version_manager_transaction_processor_not_found',\n  VersionManagerTransactionSelectorNotFound:\n    'version_manager_transaction_selector_not_found',\n  VersionManagerVersionStringNotFound:\n    'version_manager_version_string_not_found',\n  VersionManagerVersionMetadataIncorrectType:\n    'version_manager_version_metadata_incorrect_type',\n};\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common error codes used across services.\n */\nexport default {\n  BlockchainTimeOutOfRange: 'blockchain_time_out_of_range',\n  InvalidTransactionNumberOrTimeHash: 'invalid_transaction_number_or_time_hash',\n  NotEnoughBalanceForWrite: 'not_enough_balace_for_write',\n  SpendingCapPerPeriodReached: 'spending_cap_per_period_reached',\n  ValueTimeLockNotFound: 'value_time_lock_not_found',\n};\n"],"names":["FetchResultCode","OperationType","PublicKeyPurpose","ResponseStatus","TransactionProcessingStatus","AnchoredDataIncorrectFormat","AnchoredDataNumberOfOperationsGreaterThanMax","AnchoredDataNumberOfOperationsNotPositiveInteger","AnchorFileCreatePropertyNotArray","AnchorFileDecompressionFailure","AnchorFileHasUnknownProperty","AnchorFileMapFileHashMissing","AnchorFileMapFileHashNotString","AnchorFileMapFileHashUnsupported","AnchorFileMissingOperationsProperty","AnchorFileMultipleOperationsForTheSameDid","AnchorFileNotJson","AnchorFileOperationCountExceededPaidLimit","AnchorFileRecoverPropertyNotArray","AnchorFileDeactivatePropertyNotArray","AnchorFileUnexpectedPropertyInOperations","AnchorFileWriterLockIPropertyNotString","BatchWriterAlreadyHasOperationForDid","CasFileHashNotValid","CasFileNotAFile","CasFileNotFound","CasFileTooLarge","CasNotReachable","ChunkFileDeltaSizeExceedsLimit","ChunkFileDeltasNotArrayOfStrings","ChunkFileDeltasPropertyNotArray","ChunkFileUnexpectedProperty","CreateOperationMissingOrUnknownProperty","CreateOperationSuffixDataMissingOrNotString","CreateOperationSuffixDataMissingOrUnknownProperty","CreateOperationTypeIncorrect","DeltaMissingOrNotString","DeltaMissingOrUnknownProperty","DidIncorrectPrefix","DidInitialStateValueContainsMoreThanOneDot","DidInitialStateValueContainsNoDot","DidInitialStateValueDoesNotContainTwoParts","DidInvalidDidString","DidLongFormNoInitialStateFound","DidLongFormOnlyInitialStateParameterIsAllowed","DidLongFormOnlyOneQueryParamAllowed","DidNoUniqueSuffix","DidUniqueSuffixFromInitialStateMismatch","DocumentComposerDocumentMissing","DocumentComposerIdNotString","DocumentComposerIdNotUsingBase64UrlCharacterSet","DocumentComposerIdTooLong","DocumentComposerInvalidSignature","DocumentComposerPatchMissingOrUnknownAction","DocumentComposerPatchMissingOrUnknownProperty","DocumentComposerPatchPublicKeyIdNotString","DocumentComposerPatchPublicKeyIdsNotArray","DocumentComposerPatchServiceEndpointNotString","DocumentComposerPatchServiceEndpointsNotArray","DocumentComposerPatchServiceTypeMissingOrUnknown","DocumentComposerPublicKeyIdDuplicated","DocumentComposerPublicKeyJwkMissingOrIncorrectType","DocumentComposerPublicKeyMissingOrUnknownProperty","DocumentComposerPublicKeysNotArray","DocumentComposerPublicKeyTypeMissingOrIncorrectType","DocumentComposerPublicKeyPurposeMissingOrUnknown","DocumentComposerPublicKeyPurposeExceedsMaxLength","DocumentComposerPublicKeyInvalidPurpose","DocumentComposerPatchServiceEndpointIdsNotArray","DocumentComposerPatchServiceEndpointServiceEndpointNotString","DocumentComposerPatchServiceEndpointServiceEndpointNotValidUrl","DocumentComposerPatchServiceEndpointServiceEndpointTooLong","DocumentComposerPatchServiceEndpointTypeNotString","DocumentComposerPatchServiceEndpointTypeTooLong","DocumentComposerServiceEndpointMissingOrUnknownProperty","DocumentComposerServiceNotArray","DocumentComposerUnknownPropertyInDocument","DocumentComposerUpdateOperationDocumentPatchesNotArray","DocumentIncorretEncodedFormat","DocumentNotJson","DocumentNotValidOriginalDocument","EncoderValidateBase64UrlStringInputNotBase64UrlString","EncoderValidateBase64UrlStringInputNotString","JwkHasUnknownProperty","JwkMissingOrInvalidCrv","JwkMissingOrInvalidKty","JwkMissingOrInvalidTypeX","JwkMissingOrInvalidTypeY","JwkUndefined","JwsCompactJwsInvalid","JwsCompactJwsNotString","JwsFailedSignatureValidation","JwsPayloadNotBase64UrlString","JwsProtectedHeaderMissingOrIncorrectAlg","JwsProtectedHeaderMissingOrUnknownProperty","JwsSignatureNotBase64UrlString","MapFileChunkHasMissingOrUnknownProperty","MapFileChunksPropertyDoesNotHaveExactlyOneElement","MapFileChunksPropertyMissingOrIncorrectType","MapFileDecompressionFailure","MapFileHasUnknownProperty","MapFileMultipleOperationsForTheSameDid","MapFileNotJson","MapFileOperationsPropertyHasMissingOrUnknownProperty","MapFileUpdateOperationsNotArray","MultihashNotLatestSupportedHashAlgorithm","MultihashUnsupportedHashAlgorithm","OperationCreateInvalidDidDocument","OperationCountLessThanZero","OperationCreatePayloadHasMissingOrInvalidNextRecoveryCommitment","OperationCreatePayloadHasMissingOrInvalidNextUpdateCommitment","OperationCreatePayloadMissingOrUnknownProperty","OperationDocumentPatchesMissing","OperationPayloadMissingOrIncorrectType","OperationProcessorCreateOperationDoesNotHaveRevealValue","OperationProcessorUnknownOperationType","OperationTypeUnknownOrMissing","QueueingMultipleOperationsPerDidNotAllowed","RecoverOperationMissingOrInvalidDidUniqueSuffix","RecoverOperationMissingOrUnknownProperty","RecoverOperationSignedDataMissingOrUnknownProperty","RecoverOperationTypeIncorrect","RequestHandlerDeltaExceedsMaximumSize","RequestHandlerUnknownOperationType","DeactivateOperationMissingOrInvalidDidUniqueSuffix","DeactivateOperationMissingOrUnknownProperty","DeactivateOperationSignedDataMissingOrUnknownProperty","DeactivateOperationSignedDidUniqueSuffixMismatch","DeactivateOperationTypeIncorrect","TransactionFeePaidInvalid","TransactionFeePaidLessThanNormalizedFee","TransactionProcessorPaidOperationCountExceedsLimit","TransactionsNotInSameBlock","UpdateOperationMissingDidUniqueSuffix","UpdateOperationMissingOrUnknownProperty","UpdateOperationSignedDataHasMissingOrUnknownProperty","UpdateOperationTypeIncorrect","ValueTimeLockVerifierInvalidNumberOfOperations","ValueTimeLockVerifierTransactionTimeOutsideLockRange","ValueTimeLockVerifierTransactionWriterLockOwnerMismatch","SidetreeError","code","message","Object","setPrototypeOf","prototype","createFromError","err","undefined","stringify","error","JSON","getOwnPropertyNames","Error","protocolParameters","hashAlgorithmInMultihashCode","maxAnchorFileSizeInBytes","maxChunkFileSizeInBytes","maxDeltaSizeInBytes","maxMapFileSizeInBytes","maxNumberOfOperationsForNoValueTimeLock","maxNumberOfOperationsPerTransactionTime","maxNumberOfTransactionsPerTransactionTime","maxOperationsPerBatch","normalizedFeeToPerOperationFeeMultiplier","valueTimeLockAmountMultiplier","AnchoredDataSerializer","serialize","dataToBeAnchored","numberOfOperations","delimiter","anchorFileHash","deserialize","serializedData","splitData","split","length","ErrorCode","parsePositiveInteger","input","test","Number","Encoder","encode","content","base64url","decodeAsBuffer","encodedContent","validateBase64UrlString","toBuffer","decodeAsString","decodeBase64UrlAsString","decode","isBase64UrlString","canonicalize","require","JsonCanonicalizer","canonicalizeAsBuffer","canonicalizedString","Buffer","from","multihashes","Multihash","hash","ProtocolParameters","crypto","update","digest","codes","canonicalizeThenHashThenEncode","contentBuffer","hashThenEncode","multihashBuffer","getHashAlgorithmCode","multihash","verifyHashComputedUsingLatestSupportedAlgorithm","isComputedUsingHashAlgorithm","expectedHashAlgorithmInMultihashCode","isValidHash","encodedMultihash","verify","console","log","canonicalizeAndVerify","hashAlgorithmCode","actualHashBuffer","compare","ReadableStream","readAll","stream","alloc","on","chunk","read","concat","readBody","Promise","resolve","reject","SortedArray","binarySearch","sortedArray","searchItem","lowerBoundaryIndex","upperBoundaryIndex","middleIndex","comparisonResult","Math","floor","BlockchainGetFeeResponseNotOk","BlockchainGetLatestTimeResponseNotOk","BlockchainGetLockResponseNotOk","BlockchainGetWriterLockResponseNotOk","BlockchainReadInvalidArguments","BlockchainReadResponseNotOk","BlockchainWriteResponseNotOk","VersionManagerBatchWriterNotFound","VersionManagerDocumentComposerNotFound","VersionManagerOperationProcessorNotFound","VersionManagerRequestHandlerNotFound","VersionManagerTransactionProcessorNotFound","VersionManagerTransactionSelectorNotFound","VersionManagerVersionStringNotFound","VersionManagerVersionMetadataIncorrectType","BlockchainTimeOutOfRange","InvalidTransactionNumberOrTimeHash","NotEnoughBalanceForWrite","SpendingCapPerPeriodReached","ValueTimeLockNotFound"],"mappings":"0EAsBKA,iGAAL,SAAKA,GACHA,sCACAA,qCACAA,yDACAA,uDACAA,gCACAA,+BACAA,oBAPF,CAAKA,IAAAA,OAUL,ICVKC,IDUUD,GCVf,SAAKC,GACHA,kBACAA,kBACAA,0BACAA,oBAJF,CAAKA,IAAAA,OAOL,ICPKC,IDOUD,GCPf,SAAKC,GACHA,cACAA,oBACAA,2BACAA,8BACAA,oCACAA,oCANF,CAAKA,IAAAA,OASL,ICTKC,IDSUD,GCTf,SAAKC,GACHA,2BACAA,uBACAA,6BACAA,wBAJF,CAAKA,IAAAA,OAOL,ICPKC,IDOUD,GCPf,SAAKC,GACHA,oBACAA,wBAFF,CAAKA,IAAAA,OAKL,MAAeA,ICLA,CACbC,4BAA6B,iCAC7BC,6CACE,sDACFC,iDACE,0DACFC,iCAAkC,wCAClCC,+BAAgC,mCAChCC,6BAA8B,mCAC9BC,6BAA8B,oCAC9BC,+BAAgC,uCAChCC,iCAAkC,wCAClCC,oCACE,0CACFC,0CACE,mDACFC,kBAAmB,uBACnBC,0CACE,kDACFC,kCAAmC,yCACnCC,qCACE,4CACFC,yCACE,gDACFC,uCACE,iDACFC,qCACE,6CACFC,oBAAqB,0BACrBC,gBAAiB,sBACjBC,gBAAiB,qBACjBC,gBAAiB,qBACjBC,gBAAiB,oBACjBC,+BAAgC,sCAChCC,iCAAkC,wCAClCC,gCAAiC,uCACjCC,4BAA6B,iCAC7BC,wCACE,+CACFC,4CACE,qDACFC,kDACE,2DACFC,6BAA8B,kCAC9BC,wBAAyB,+BACzBC,8BAA+B,oCAC/BC,mBAAoB,uBACpBC,2CACE,qDACFC,kCAAmC,0CACnCC,2CACE,qDACFC,oBAAqB,yBACrBC,+BAAgC,uCAChCC,8CACE,yDACFC,oCACE,6CACFC,kBAAmB,uBACnBC,wCACE,gDACFC,gCAAiC,qCACjCC,4BAA6B,kCAC7BC,gDACE,2DACFC,0BAA2B,gCAC3BC,iCAAkC,sCAClCC,4CACE,oDACFC,8CACE,sDACFC,0CACE,mDACFC,0CACE,oDACFC,8CACE,sDACFC,8CACE,sDACFC,iDACE,0DACFC,sCACE,6CACFC,mDACE,6DACFC,kDACE,2DACFC,mCAAoC,0CACpCC,oDACE,8DACFC,iDACE,0DACFC,iDACE,0DACFC,wCACE,+CACFC,gDACE,mDACFC,6DACE,iEACFC,+DACE,oEACFC,2DACE,+DACFC,kDACE,qDACFC,gDACE,mDACFC,wDACE,iEACFC,gCAAiC,sCACjCC,0CACE,iDACFC,uDACE,8DACFC,8BAA+B,oCAC/BC,gBAAiB,oBACjBC,iCAAkC,uCAClCC,sDACE,+DACFC,6CACE,qDACFC,sBAAuB,2BACvBC,uBAAwB,6BACxBC,uBAAwB,6BACxBC,yBAA0B,gCAC1BC,yBAA0B,gCAC1BC,aAAc,gBACdC,qBAAsB,0BACtBC,uBAAwB,6BACxBC,6BAA8B,kCAC9BC,6BAA8B,mCAC9BC,wCACE,gDACFC,2CACE,mDACFC,+BAAgC,qCAChCC,wCACE,iDACFC,kDACE,6DACFC,4CACE,qDACFC,4BAA6B,iCAC7BC,0BAA2B,gCAC3BC,uCACE,gDACFC,eAAgB,oBAChBC,qDACE,+DACFC,gCAAiC,uCACjCC,yCACE,gDACFC,kCAAmC,uCACnCC,kCAAmC,wCACnCC,2BAA4B,iCAC5BC,gEACE,2EACFC,8DACE,yEACFC,+CACE,uDACFC,gCAAiC,qCACjCC,uCACE,8CACFC,wDACE,kEACFC,uCACE,6CACFC,8BAA+B,oCAC/BC,2CACE,mDACFC,gDACE,yDACFC,yCACE,gDACFC,mDACE,4DACFC,8BAA+B,mCAC/BC,sCACE,kDACFC,mCAAoC,yCACpCC,mDACE,4DACFC,4CACE,mDACFC,sDACE,+DACFC,iDACE,yDACFC,iCAAkC,sCAClCC,0BAA2B,kCAC3BC,wCACE,gDACFC,mDACE,2DACFC,2BAA4B,iCAC5BC,sCACE,6CACFC,wCACE,+CACFC,qDACE,+DACFC,6BAA8B,kCAC9BC,+CACE,uDACFC,qDACE,qEACFC,wDACE,8rCChNiBC,iCACAC,EAAcC,8BACzBA,EAAaD,OAASC,EAAYD,eADvBA,EAKjBE,OAAOC,wLAAgCC,6GAS3BC,gBAAP,SAAuBL,EAAcM,UACnC,IAAIP,EAAcC,EAAMM,EAAMA,E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"}