{"version":3,"file":"common.cjs.development.js","sources":["../src/abstracts/AbstractVersionMetadata.ts","../src/enums/FetchResultCode.ts","../src/enums/OperationType.ts","../src/enums/PublicKeyPurpose.ts","../src/enums/ResponseStatus.ts","../src/enums/TransactionProcessingStatus.ts","../src/errors/CoreErrorCode.ts","../src/errors/ErrorCode.ts","../src/errors/SharedErrorCode.ts","../src/errors/SidetreeError.ts","../src/util/parameters.ts","../src/util/AnchoredDataSerializer.ts","../src/util/Encoder.ts","../src/util/JsonCanonicalizer.ts","../src/util/Multihash.ts","../src/util/ReadableStream.ts","../src/util/SortedArray.ts"],"sourcesContent":["/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Holds metadata for a particular Sidetree version needed by the orchestration layer classes across all versions of the Sidetree.\n */\nexport default abstract class AbstractVersionMetadata {\n  /** Hash algorithm in Multihash code in DEC (not in HEX). */\n  public abstract hashAlgorithmInMultihashCode: number;\n  /** Multiplier on the per op fee */\n  public abstract normalizedFeeToPerOperationFeeMultiplier: number;\n  /** Value time lock amount multiplier */\n  public abstract valueTimeLockAmountMultiplier: number;\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Return code for a content fetch.\n */\nenum FetchResultCode {\n  CasNotReachable = 'cas_not_reachable',\n  InvalidHash = 'content_hash_invalid',\n  MaxSizeExceeded = 'content_exceeds_maximum_allowed_size',\n  MaxSizeNotSpecified = 'content_max_size_not_specified',\n  NotAFile = 'content_not_a_file',\n  NotFound = 'content_not_found',\n  Success = 'success',\n}\n\nexport default FetchResultCode;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sidetree operation types.\n */\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover',\n}\n\nexport default OperationType;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sidetree public key purpose.\n */\nenum PublicKeyPurpose {\n  Auth = 'auth',\n  General = 'general',\n  KeyAgreement = 'agreement',\n  AssertionMethod = 'assertion',\n  CapabilityDelegation = 'delegation',\n  CapabilityInvocation = 'invocation',\n}\n\nexport default PublicKeyPurpose;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Possible Sidetree response status.\n */\nenum ResponseStatus {\n  BadRequest = 'bad-request',\n  NotFound = 'not-found',\n  ServerError = 'server-error',\n  Succeeded = 'succeeded',\n}\n\nexport default ResponseStatus;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The state of a transaction that is being processed.\n */\nenum TransactionProcessingStatus {\n  Pending = 'pending',\n  Processed = 'processed',\n}\n\nexport default TransactionProcessingStatus;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error codes used by Sidetree core service.\n */\nexport default {\n  BlockchainGetFeeResponseNotOk: 'blockchain_get_fee_response_not_ok',\n  BlockchainGetLatestTimeResponseNotOk:\n    'blockchain_get_latest_time_response_not_ok',\n  BlockchainGetLockResponseNotOk: 'blockchain_get_lock_response_not_ok',\n  BlockchainGetWriterLockResponseNotOk:\n    'blockchain_get_writer_lock_response_not_ok',\n  BlockchainReadInvalidArguments: 'blockchain_read_invalid_arguments',\n  BlockchainReadResponseNotOk: 'blockchain_read_response_not_ok',\n  BlockchainWriteResponseNotOk: 'blockchain_write_response_not_ok',\n  VersionManagerBatchWriterNotFound: 'version_manager_batch_writer_not_found',\n  VersionManagerDocumentComposerNotFound:\n    'version_manager_document_composer_not_found',\n  VersionManagerOperationProcessorNotFound:\n    'version_manager_operation_processor_not_found',\n  VersionManagerRequestHandlerNotFound:\n    'version_manager_request_handler_not_found',\n  VersionManagerTransactionProcessorNotFound:\n    'version_manager_transaction_processor_not_found',\n  VersionManagerTransactionSelectorNotFound:\n    'version_manager_transaction_selector_not_found',\n  VersionManagerVersionStringNotFound:\n    'version_manager_version_string_not_found',\n  VersionManagerVersionMetadataIncorrectType:\n    'version_manager_version_metadata_incorrect_type',\n};\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error codes used ONLY by this version of the protocol.\n */\nexport default {\n  AnchoredDataIncorrectFormat: 'anchored_data_incorrect_format',\n  AnchoredDataNumberOfOperationsGreaterThanMax:\n    'anchored_data_number_of_operations_greater_than_max',\n  AnchoredDataNumberOfOperationsNotPositiveInteger:\n    'anchored_data_number_of_operations_not_positive_integer',\n  AnchorFileCreatePropertyNotArray: 'anchor_file_create_property_not_array',\n  AnchorFileDecompressionFailure: 'anchor_file_decompression_failed',\n  AnchorFileHasUnknownProperty: 'anchor_file_has_unknown_property',\n  AnchorFileMapFileHashMissing: 'anchor_file_map_file_hash_missing',\n  AnchorFileMapFileHashNotString: 'anchor_file_map_file_hash_not_string',\n  AnchorFileMapFileHashUnsupported: 'anchor_file_map_file_hash_unsupported',\n  AnchorFileMissingOperationsProperty:\n    'anchor_file_did_unique_suffixes_missing',\n  AnchorFileMultipleOperationsForTheSameDid:\n    'anchor_file_multiple_operations_for_the_same_did',\n  AnchorFileNotJson: 'anchor_file_not_json',\n  AnchorFileOperationCountExceededPaidLimit:\n    'anchor_file_operation_count_exceeded_paid_limit',\n  AnchorFileRecoverPropertyNotArray: 'anchor_file_recover_property_not_array',\n  AnchorFileDeactivatePropertyNotArray:\n    'anchor_file_deactivate_property_not_array',\n  AnchorFileUnexpectedPropertyInOperations:\n    'anchor_file_unexpected_property_in_operations',\n  AnchorFileWriterLockIPropertyNotString:\n    'anchor_file_writer_lock_id_property_not_string',\n  BatchWriterAlreadyHasOperationForDid:\n    'batch_writer_already_has_operation_for_did',\n  CasFileHashNotValid: 'cas_file_hash_not_valid',\n  CasFileNotAFile: 'cas_file_not_a file',\n  CasFileNotFound: 'cas_file_not_found',\n  CasFileTooLarge: 'cas_file_too_large',\n  CasNotReachable: 'cas_not_reachable',\n  ChunkFileDeltaSizeExceedsLimit: 'chunk_file_delta_size_exceeds_limit',\n  ChunkFileDeltasNotArrayOfStrings: 'chunk_file_deltas_not_array_of_string',\n  ChunkFileDeltasPropertyNotArray: 'chunk_file_deltas_property_not_array',\n  ChunkFileUnexpectedProperty: 'chunk_file_unexpected_property',\n  CreateOperationMissingOrUnknownProperty:\n    'create_operation_missing_or_unknown_property',\n  CreateOperationSuffixDataMissingOrNotString:\n    'create_operation_suffix_data_missing_or_not_string',\n  CreateOperationSuffixDataMissingOrUnknownProperty:\n    'create_operation_suffix_data_missing_or_unknown_property',\n  CreateOperationTypeIncorrect: 'create_operation_type_incorrect',\n  DeltaMissingOrNotString: 'delta_missting_or_not_string',\n  DeltaMissingOrUnknownProperty: 'delta_missing_or_unknown_property',\n  DidIncorrectPrefix: 'did_incorrect_prefix',\n  DidInitialStateValueContainsMoreThanOneDot:\n    'did_initial_state_value_contains_more_than_one_dot',\n  DidInitialStateValueContainsNoDot: 'did_initial_state_value_contains_no_dot',\n  DidInitialStateValueDoesNotContainTwoParts:\n    'did_initial_state_value_does_not_contain_two_parts',\n  DidInvalidDidString: 'did_invalid_did_string',\n  DidLongFormNoInitialStateFound: 'did_long_form_no_initial_state_found',\n  DidLongFormOnlyInitialStateParameterIsAllowed:\n    'did_long_form_only_initial_values_parameter_is_allowed',\n  DidLongFormOnlyOneQueryParamAllowed:\n    'did_long_form_only_one_query_param_allowed',\n  DidNoUniqueSuffix: 'did_no_unique_suffix',\n  DidUniqueSuffixFromInitialStateMismatch:\n    'did_unique_suffix_from_initial_state_mismatch',\n  DocumentComposerDocumentMissing: 'document_composer_document_missing',\n  DocumentComposerIdNotString: 'document_composer_id_not_string',\n  DocumentComposerIdNotUsingBase64UrlCharacterSet:\n    'document_composer_id_not_using_base_64_url_character_set',\n  DocumentComposerIdTooLong: 'document_composer_id_too_long',\n  DocumentComposerInvalidSignature: 'document_composer_invalid_signature',\n  DocumentComposerPatchMissingOrUnknownAction:\n    'document_composer_patch_missing_or_unknown_action',\n  DocumentComposerPatchMissingOrUnknownProperty:\n    'document_composer_patch_missing_or_unknown_property',\n  DocumentComposerPatchPublicKeyIdNotString:\n    'document_composer_patch_public_key_id_not_string',\n  DocumentComposerPatchPublicKeyIdsNotArray:\n    'document_composer_patch_public_keys_ids_not_array',\n  DocumentComposerPatchServiceEndpointNotString:\n    'document_composer_patch_service_endpoint_not_string',\n  DocumentComposerPatchServiceEndpointsNotArray:\n    'document_composer_patch_service_endpoints_not_array',\n  DocumentComposerPatchServiceTypeMissingOrUnknown:\n    'document_composer_patch_service_type_missing_or_unknown',\n  DocumentComposerPublicKeyIdDuplicated:\n    'document_composer_public_key_id_duplicated',\n  DocumentComposerPublicKeyJwkMissingOrIncorrectType:\n    'document_composer_public_key_jwk_missing_or_incorrect_type',\n  DocumentComposerPublicKeyMissingOrUnknownProperty:\n    'document_composer_public_key_missing_or_unknown_property',\n  DocumentComposerPublicKeysNotArray: 'document_composer_public_keys_not_array',\n  DocumentComposerPublicKeyTypeMissingOrIncorrectType:\n    'document_composer_public_key_type_missing_or_incorrect_type',\n  DocumentComposerPublicKeyPurposeMissingOrUnknown:\n    'document_composer_public_key_purpose_missing_or_unknown',\n  DocumentComposerPublicKeyPurposeExceedsMaxLength:\n    'document_composer_public_key_purpose_exceeds_max_length',\n  DocumentComposerPublicKeyInvalidPurpose:\n    'document_composer_public_key_invalid_purpose',\n  DocumentComposerPatchServiceEndpointIdsNotArray:\n    'document_composer_service_endpoint_ids_not_array',\n  DocumentComposerPatchServiceEndpointServiceEndpointNotString:\n    'document_composer_service_endpoint_service_endpoint_not_string',\n  DocumentComposerPatchServiceEndpointServiceEndpointNotValidUrl:\n    'document_composer_service_endpoint_service_endpoint_not_valid_url',\n  DocumentComposerPatchServiceEndpointServiceEndpointTooLong:\n    'document_composer_service_endpoint_service_endpoint_too_long',\n  DocumentComposerPatchServiceEndpointTypeNotString:\n    'document_composer_service_endpoint_type_not_string',\n  DocumentComposerPatchServiceEndpointTypeTooLong:\n    'document_composer_service_endpoint_type_too_long',\n  DocumentComposerServiceEndpointMissingOrUnknownProperty:\n    'document_composer_service_endpoint_missing_or_unknown_property',\n  DocumentComposerServiceNotArray: 'document_composer_service_not_array',\n  DocumentComposerUnknownPropertyInDocument:\n    'document_composer_unknown_property_in_document',\n  DocumentComposerUpdateOperationDocumentPatchesNotArray:\n    'document_composer_update_operation_document_patch_not_array',\n  DocumentIncorretEncodedFormat: 'document_incorrect_encoded_format',\n  DocumentNotJson: 'document_not_json',\n  DocumentNotValidOriginalDocument: 'document_not_valid_original_document',\n  EncoderValidateBase64UrlStringInputNotBase64UrlString:\n    'encoder_validate_base64url_string_input_not_base64url_string',\n  EncoderValidateBase64UrlStringInputNotString:\n    'encoder_validate_base64url_string_input_not_string',\n  JwkHasUnknownProperty: 'jwk_has_unknown_property',\n  JwkMissingOrInvalidCrv: 'jwk_missing_or_invalid_crv',\n  JwkMissingOrInvalidKty: 'jwk_missing_or_invalid_kty',\n  JwkMissingOrInvalidTypeX: 'jwk_missing_or_invalid_type_x',\n  JwkMissingOrInvalidTypeY: 'jwk_missing_or_invalid_type_y',\n  JwkUndefined: 'jwk_undefined',\n  JwsCompactJwsInvalid: 'jws_compact_jws_invalid',\n  JwsCompactJwsNotString: 'jws_compact_jws_not_string',\n  JwsFailedSignatureValidation: 'jws_failed_signature_validation',\n  JwsPayloadNotBase64UrlString: 'jws_payload_not_base64url_string',\n  JwsProtectedHeaderMissingOrIncorrectAlg:\n    'jws_protected_header_missing_or_incorrect_alg',\n  JwsProtectedHeaderMissingOrUnknownProperty:\n    'jws_protected_header_missing_or_unknown_property',\n  JwsSignatureNotBase64UrlString: 'jws_signature_not_base64url_string',\n  MapFileChunkHasMissingOrUnknownProperty:\n    'map_file_chunk_has_missing_or_unknown_property',\n  MapFileChunksPropertyDoesNotHaveExactlyOneElement:\n    'map_file_chunks_property_does_not_have_exactly_one_element',\n  MapFileChunksPropertyMissingOrIncorrectType:\n    'map_file_chunks_property_missing_or_incorrect_type',\n  MapFileDecompressionFailure: 'map_file_decompression_failure',\n  MapFileHasUnknownProperty: 'map_file_has_unknown_property',\n  MapFileMultipleOperationsForTheSameDid:\n    'map_file_multiple_operations_for_the_same_did',\n  MapFileNotJson: 'map_file_not_json',\n  MapFileOperationsPropertyHasMissingOrUnknownProperty:\n    'map_file_operations_property_has_missing_or_unknown_property',\n  MapFileUpdateOperationsNotArray: 'map_file_update_operations_not_array',\n  MultihashNotLatestSupportedHashAlgorithm:\n    'multihash_not_latest_supported_hash_algorithm',\n  MultihashUnsupportedHashAlgorithm: 'multihash_unsupported_hash_algorithm',\n  OperationCreateInvalidDidDocument: 'operation_create_invalid_did_document',\n  OperationCountLessThanZero: 'operation_count_less_than_zero',\n  OperationCreatePayloadHasMissingOrInvalidNextRecoveryCommitment:\n    'operation_create_payload_has_missing_or_invalid_next_recovery_commitment',\n  OperationCreatePayloadHasMissingOrInvalidNextUpdateCommitment:\n    'operation_create_payload_has_missing_or_invalid_next_update_commitment',\n  OperationCreatePayloadMissingOrUnknownProperty:\n    'operation_create_payload_missing_or_unknown_property',\n  OperationDocumentPatchesMissing: 'operation_document_patches_missing',\n  OperationPayloadMissingOrIncorrectType:\n    'operation_payload_missing_or_incorrect_type',\n  OperationProcessorCreateOperationDoesNotHaveRevealValue:\n    'operation_processor_create_operation_does_not_have_reveal_value',\n  OperationProcessorUnknownOperationType:\n    'operation_processor_unknown_operation_type',\n  OperationTypeUnknownOrMissing: 'operation_type_unknown_or_missing',\n  QueueingMultipleOperationsPerDidNotAllowed:\n    'queueing_multiple_operations_per_did_not_allowed',\n  RecoverOperationMissingOrInvalidDidUniqueSuffix:\n    'recover_operation_missing_or_invalid_did_unique_suffix',\n  RecoverOperationMissingOrUnknownProperty:\n    'recover_operation_missing_or_unknown_property',\n  RecoverOperationSignedDataMissingOrUnknownProperty:\n    'recover_operation_signed_data_missing_or_unknown_property',\n  RecoverOperationTypeIncorrect: 'recover_operation_type_incorrect',\n  RequestHandlerDeltaExceedsMaximumSize:\n    'request_handler_patch_data_exceeds_maximum_size',\n  RequestHandlerUnknownOperationType: 'request_handler_unknown_operation_type',\n  DeactivateOperationMissingOrInvalidDidUniqueSuffix:\n    'deactivate_operation_missing_or_invalid_did_unique_suffix',\n  DeactivateOperationMissingOrUnknownProperty:\n    'deactivate_operation_missing_or_unknown_property',\n  DeactivateOperationSignedDataMissingOrUnknownProperty:\n    'deactivate_operation_signed_data_missing_or_unknown_property',\n  DeactivateOperationSignedDidUniqueSuffixMismatch:\n    'deactivate_operation_signed_did_unique_suffix_mismatch',\n  DeactivateOperationTypeIncorrect: 'deactivate_operation_type_incorrect',\n  TransactionFeePaidInvalid: 'transaction_fee_paid_is_invalid',\n  TransactionFeePaidLessThanNormalizedFee:\n    'transaction_fee_paid_less_than_normalized_fee',\n  TransactionProcessorPaidOperationCountExceedsLimit:\n    'transaction_processor_paid_operation_count_exceeds_limit',\n  TransactionsNotInSameBlock: 'transactions_not_in_same_block',\n  UpdateOperationMissingDidUniqueSuffix:\n    'update_operation_missing_did_unique_suffix',\n  UpdateOperationMissingOrUnknownProperty:\n    'update_operation_missing_or_unknown_property',\n  UpdateOperationSignedDataHasMissingOrUnknownProperty:\n    'update_operation_signed_data_has_missing_or_unknown_property',\n  UpdateOperationTypeIncorrect: 'update_operation_type_incorrect',\n  ValueTimeLockVerifierInvalidNumberOfOperations:\n    'value_time_lock_verifierInvalid_number_of_operations',\n  ValueTimeLockVerifierTransactionTimeOutsideLockRange:\n    'value_time_lock_verifiertarget_transaction_time_outside_lock_range',\n  ValueTimeLockVerifierTransactionWriterLockOwnerMismatch:\n    'value_time_lock_verifiertransaction_owner_lock_writer_mismatch',\n};\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common error codes used across services.\n */\nexport default {\n  BlockchainTimeOutOfRange: 'blockchain_time_out_of_range',\n  InvalidTransactionNumberOrTimeHash: 'invalid_transaction_number_or_time_hash',\n  NotEnoughBalanceForWrite: 'not_enough_balace_for_write',\n  SpendingCapPerPeriodReached: 'spending_cap_per_period_reached',\n  ValueTimeLockNotFound: 'value_time_lock_not_found',\n};\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Standardized error class for throwing generic errors internal to this project.\n * NOTE: Not to be confused with RequestError which is used as a response to external requests.\n */\nexport default class SidetreeError extends Error {\n  constructor(public code: string, message?: string) {\n    super(message ? `${code}: ${message}` : code);\n\n    // NOTE: Extending 'Error' breaks prototype chain since TypeScript 2.1.\n    // The following line restores prototype chain.\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n  /**\n   * Returns a new SidetreeError object using the inputs.\n   *\n   * @param code The error code.\n   * @param err The error exception thrown.\n   */\n  public static createFromError(code: string, err: Error): SidetreeError {\n    return new SidetreeError(code, err ? err.message : undefined);\n  }\n\n  /**\n   * Converts the given `Error` into a string.\n   */\n  public static stringify(error: Error) {\n    return JSON.stringify(error, Object.getOwnPropertyNames(error));\n  }\n}\n","﻿/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ProtocolParameters from '../models/ProtocolParameters';\n\n/**\n * Defines the list of protocol parameters, intended ONLY to be used within each version of Sidetree.\n */\nconst protocolParameters: ProtocolParameters = {\n  hashAlgorithmInMultihashCode: 18,\n  maxAnchorFileSizeInBytes: 1000000,\n  maxChunkFileSizeInBytes: 20000000,\n  maxDeltaSizeInBytes: 1000,\n  maxMapFileSizeInBytes: 1000000,\n  maxNumberOfOperationsForNoValueTimeLock: 100,\n  maxNumberOfOperationsPerTransactionTime: 600000,\n  maxNumberOfTransactionsPerTransactionTime: 300,\n  maxOperationsPerBatch: 10000,\n  normalizedFeeToPerOperationFeeMultiplier: 0.01,\n  valueTimeLockAmountMultiplier: 600,\n};\nexport default protocolParameters;\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnchoredData } from '../models';\nimport { ErrorCode, SidetreeError } from '../errors';\nimport protocolParameters from './parameters';\n\n/**\n * Encapsulates functionality to serialize/deserialize data that read/write to\n * the blockchain.\n */\nexport default class AnchoredDataSerializer {\n  /** Delimiter between logical parts in anchor string. */\n  public static readonly delimiter = '.';\n\n  /**\n   * Converts the given inputs to the string that is to be written to the blockchain.\n   *\n   * @param dataToBeAnchored The data to serialize.\n   */\n  public static serialize(dataToBeAnchored: AnchoredData): string {\n    // Concatenate the inputs w/ the delimiter and return\n    const anchorString = `${dataToBeAnchored.numberOfOperations}${AnchoredDataSerializer.delimiter}${dataToBeAnchored.anchorFileHash}`;\n    return anchorString;\n  }\n\n  /**\n   * Deserializes the given string that is read from the blockchain into data.\n   *\n   * @param serializedData The data to be deserialized.\n   */\n  public static deserialize(serializedData: string): AnchoredData {\n    const splitData = serializedData.split(AnchoredDataSerializer.delimiter);\n\n    if (splitData.length !== 2) {\n      throw new SidetreeError(\n        ErrorCode.AnchoredDataIncorrectFormat,\n        `Input is not in correct format: ${serializedData}`\n      );\n    }\n\n    const numberOfOperations = AnchoredDataSerializer.parsePositiveInteger(\n      splitData[0]\n    );\n\n    if (numberOfOperations > protocolParameters.maxOperationsPerBatch) {\n      throw new SidetreeError(\n        ErrorCode.AnchoredDataNumberOfOperationsGreaterThanMax,\n        `Number of operations ${numberOfOperations} must be less than or equal to ${protocolParameters.maxOperationsPerBatch}`\n      );\n    }\n\n    return {\n      anchorFileHash: splitData[1],\n      numberOfOperations: numberOfOperations,\n    };\n  }\n\n  private static parsePositiveInteger(input: string): number {\n    // NOTE:\n    // /<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // [1-9] denotes leading '0' not allowed.\n    // \\d* denotes followed by 0 or more decimal digits.\n    const isPositiveInteger = /^[1-9]\\d*$/.test(input);\n\n    if (!isPositiveInteger) {\n      throw new SidetreeError(\n        ErrorCode.AnchoredDataNumberOfOperationsNotPositiveInteger,\n        `Number of operations '${input}' is not a positive integer without leading zeros.`\n      );\n    }\n\n    return Number(input);\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport base64url from 'base64url';\nimport ErrorCode from '../errors/ErrorCode';\nimport SidetreeError from '../errors/SidetreeError';\n\n/**\n * Class that encodes binary blobs into strings.\n * Note that the encode/decode methods may change underlying encoding scheme.\n */\nexport default class Encoder {\n  /**\n   * Encodes given Buffer into a Base64URL string.\n   */\n  public static encode(content: Buffer | string): string {\n    const encodedContent = base64url.encode(content);\n    return encodedContent;\n  }\n\n  /**\n   * Decodes the given Base64URL string into a Buffer.\n   */\n  public static decodeAsBuffer(encodedContent: string): Buffer {\n    Encoder.validateBase64UrlString(encodedContent);\n\n    const content = base64url.toBuffer(encodedContent);\n    return content;\n  }\n\n  /**\n   * Decodes the given input into the original string.\n   */\n  public static decodeAsString(encodedContent: string): string {\n    return Encoder.decodeBase64UrlAsString(encodedContent);\n  }\n\n  /**\n   * Decodes the given Base64URL string into the original string.\n   */\n  public static decodeBase64UrlAsString(input: string): string {\n    Encoder.validateBase64UrlString(input);\n\n    const content = base64url.decode(input);\n    return content;\n  }\n\n  /**\n   * Validates if the given input is a Base64URL string.\n   * undefined is considered not a valid Base64URL string.\n   * NOTE: input is `any` type to handle cases when caller passes input directly from JSON.parse() as `any`.\n   * @throws SidetreeError if input is not a Base64URL string.\n   */\n  private static validateBase64UrlString(input: any) {\n    if (typeof input !== 'string') {\n      throw new SidetreeError(\n        ErrorCode.EncoderValidateBase64UrlStringInputNotString,\n        `Input '${input}' not a string.`\n      );\n    }\n\n    const isBase64UrlString = Encoder.isBase64UrlString(input);\n    if (!isBase64UrlString) {\n      throw new SidetreeError(\n        ErrorCode.EncoderValidateBase64UrlStringInputNotBase64UrlString,\n        `Input '${input}' not a Base64URL string.`\n      );\n    }\n  }\n\n  /**\n   * Tests if the given string is a Base64URL string.\n   */\n  public static isBase64UrlString(input: string): boolean {\n    // NOTE:\n    // '/<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // + denotes one or more characters.\n    const isBase64UrlString = /^[A-Za-z0-9_-]+$/.test(input);\n    return isBase64UrlString;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst canonicalize = require('canonicalize');\n\n/**\n * Class containing reusable JSON canonicalization operations using JSON Canonicalization Scheme (JCS).\n */\nexport default class JsonCanonicalizer {\n  /**\n   * Canonicalizes the given content as a UTF8 buffer.\n   */\n  public static canonicalizeAsBuffer(content: object): Buffer {\n    const canonicalizedString: string = canonicalize(content);\n    const contentBuffer = Buffer.from(canonicalizedString);\n    return contentBuffer;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as crypto from 'crypto';\nimport Encoder from './Encoder';\nimport ErrorCode from '../errors/ErrorCode';\nimport JsonCanonicalizer from './JsonCanonicalizer';\nimport ProtocolParameters from './parameters';\nimport SidetreeError from '../errors/SidetreeError';\n\nconst multihashes = require('multihashes');\n\n/**\n * Class that performs hashing operations using the multihash format.\n */\nexport default class Multihash {\n  /**\n   * Hashes the content using the hashing algorithm specified.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use. If not given, latest supported hashing algorithm will be used.\n   */\n  public static hash(\n    content: Buffer,\n    hashAlgorithmInMultihashCode?: number\n  ): Buffer {\n    if (hashAlgorithmInMultihashCode === undefined) {\n      hashAlgorithmInMultihashCode =\n        ProtocolParameters.hashAlgorithmInMultihashCode;\n    }\n\n    let hash;\n    switch (hashAlgorithmInMultihashCode) {\n      case 18: // SHA256\n        hash = crypto\n          .createHash('sha256') // SHA256\n          .update(content)\n          .digest();\n        break;\n      default:\n        throw new SidetreeError(ErrorCode.MultihashUnsupportedHashAlgorithm);\n    }\n\n    const hashAlgorithmName = multihashes.codes[hashAlgorithmInMultihashCode];\n    const multihash = multihashes.encode(hash, hashAlgorithmName);\n\n    return multihash;\n  }\n\n  /**\n   * Canonicalize the given content, then multihashes the result using the lastest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static canonicalizeThenHashThenEncode(content: object) {\n    const contentBuffer = JsonCanonicalizer.canonicalizeAsBuffer(content);\n    const multihashEncodedString = Multihash.hashThenEncode(\n      contentBuffer,\n      ProtocolParameters.hashAlgorithmInMultihashCode\n    );\n    return multihashEncodedString;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified then codes the multihash buffer.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static hashThenEncode(\n    content: Buffer,\n    hashAlgorithmInMultihashCode: number\n  ): string {\n    const multihashBuffer = Multihash.hash(\n      content,\n      hashAlgorithmInMultihashCode\n    );\n    const multihashEncodedString = Encoder.encode(multihashBuffer);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Given a multihash, returns the code of the hash algorithm used.\n   * @throws `SidetreeError` if hash algorithm used for the given multihash is unsupported.\n   */\n  public static getHashAlgorithmCode(multihashBuffer: Buffer): number {\n    const multihash = multihashes.decode(multihashBuffer);\n\n    // Hash algorithm must be SHA-256.\n    if (multihash.code !== 18) {\n      throw new SidetreeError(ErrorCode.MultihashUnsupportedHashAlgorithm);\n    }\n\n    return multihash.code;\n  }\n\n  /**\n   * Verifies that the given hash is a multihash computed using the latest supported hash algorithm known to this version of code.\n   * @throws `SidetreeError` if the given hash is not a multihash computed using the latest supported hash algorithm.\n   */\n  public static verifyHashComputedUsingLatestSupportedAlgorithm(hash: Buffer) {\n    const latestSupportedHashAlgorithmCode = 18;\n    const isLatestSupportedHashFormat = Multihash.isComputedUsingHashAlgorithm(\n      hash,\n      latestSupportedHashAlgorithmCode\n    ); // SHA-256.\n\n    if (!isLatestSupportedHashFormat) {\n      throw new SidetreeError(\n        ErrorCode.MultihashNotLatestSupportedHashAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Checks if the given hash is a multihash with the expected hashing algorithm.\n   */\n  public static isComputedUsingHashAlgorithm(\n    hash: Buffer,\n    expectedHashAlgorithmInMultihashCode: number\n  ): boolean {\n    try {\n      const multihash = multihashes.decode(hash);\n      return multihash.code === expectedHashAlgorithmInMultihashCode;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Verifies the given content against the given multihash.\n   */\n  public static isValidHash(\n    encodedContent: string | undefined,\n    encodedMultihash: string\n  ): boolean {\n    if (encodedContent === undefined) {\n      return false;\n    }\n\n    try {\n      const contentBuffer = Encoder.decodeAsBuffer(encodedContent);\n      return Multihash.verify(contentBuffer, encodedMultihash);\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  /**\n   * Canonicalizes the given content object, then verifies the multihash against the canonicalized string as a UTF8 buffer.\n   */\n  public static canonicalizeAndVerify(\n    content: object | undefined,\n    encodedMultihash: string\n  ): boolean {\n    if (content === undefined) {\n      return false;\n    }\n\n    try {\n      const contentBuffer = JsonCanonicalizer.canonicalizeAsBuffer(content);\n\n      return Multihash.verify(contentBuffer, encodedMultihash);\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  /**\n   * Verifies the multihash against the content `Buffer`.\n   */\n  private static verify(content: Buffer, encodedMultihash: string): boolean {\n    try {\n      const multihashBuffer = Encoder.decodeAsBuffer(encodedMultihash);\n\n      const hashAlgorithmCode = Multihash.getHashAlgorithmCode(multihashBuffer);\n      const actualHashBuffer = Multihash.hash(content, hashAlgorithmCode);\n\n      if (Buffer.compare(actualHashBuffer, multihashBuffer) !== 0) {\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * ReadableStream utilities\n */\nexport default class ReadableStream {\n  /**\n   * Given a readable stream, reads all data until end or error\n   * @param stream Fetch readable stream to read\n   * @returns a Buffer of the readable stream data\n   */\n  public static async readAll(stream: NodeJS.ReadableStream): Promise<Buffer> {\n    // Set callback for the 'readable' event to concatenate chunks of the readable stream.\n    let content: Buffer = Buffer.alloc(0);\n\n    stream.on('readable', () => {\n      // NOTE: Cast to any is to work-around incorrect TS definition for read() where\n      // `null` should be a possible return type but is not defined in @types/node: 10.12.18.\n      let chunk = stream.read() as any;\n      while (chunk !== null) {\n        content = Buffer.concat([content, chunk]);\n        chunk = stream.read();\n      }\n    });\n\n    // Create a promise to wrap the successful/failed read events.\n    const readBody = new Promise((resolve, reject) => {\n      stream.on('end', resolve);\n      stream.on('error', reject);\n    });\n\n    // Wait until the read is completed.\n    await readBody;\n\n    return content;\n  }\n}\n","/*\n * The code in this file originated from\n * @see https://github.com/decentralized-identity/sidetree\n * For the list of changes that was made to the original code\n * @see https://github.com/transmute-industries/sidetree.js/blob/master/reference-implementation-changes.md\n *\n * Copyright 2020 - Transmute Industries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class containing reusable sorted array operations.\n */\nexport default class SortedArray {\n  /**\n   * Performs binary search on an item against the given sorted array using the given compare function.\n   * @returns Returns the index of the item if found; `undefined` otherwise.\n   */\n  public static binarySearch<T1, T2>(\n    sortedArray: Array<T1>,\n    searchItem: T2,\n    compare: (item1: T1, item2: T2) => number\n  ): number | undefined {\n    let lowerBoundaryIndex = 0;\n    let upperBoundaryIndex = sortedArray.length - 1;\n    let middleIndex = 0;\n    while (lowerBoundaryIndex <= upperBoundaryIndex) {\n      middleIndex = Math.floor((lowerBoundaryIndex + upperBoundaryIndex) / 2);\n\n      const comparisonResult = compare(sortedArray[middleIndex], searchItem);\n      if (comparisonResult > 0) {\n        // If value pointed by middleIndex is greater than the searchItem:\n        upperBoundaryIndex = middleIndex - 1;\n      } else if (comparisonResult < 0) {\n        // If value pointed by middleIndex is smaller than the searchItem:\n        lowerBoundaryIndex = middleIndex + 1;\n      } else {\n        // Else we've found the item.\n        return middleIndex;\n      }\n    }\n\n    return undefined;\n  }\n}\n"],"names":["AbstractVersionMetadata","FetchResultCode","OperationType","PublicKeyPurpose","ResponseStatus","TransactionProcessingStatus","BlockchainGetFeeResponseNotOk","BlockchainGetLatestTimeResponseNotOk","BlockchainGetLockResponseNotOk","BlockchainGetWriterLockResponseNotOk","BlockchainReadInvalidArguments","BlockchainReadResponseNotOk","BlockchainWriteResponseNotOk","VersionManagerBatchWriterNotFound","VersionManagerDocumentComposerNotFound","VersionManagerOperationProcessorNotFound","VersionManagerRequestHandlerNotFound","VersionManagerTransactionProcessorNotFound","VersionManagerTransactionSelectorNotFound","VersionManagerVersionStringNotFound","VersionManagerVersionMetadataIncorrectType","AnchoredDataIncorrectFormat","AnchoredDataNumberOfOperationsGreaterThanMax","AnchoredDataNumberOfOperationsNotPositiveInteger","AnchorFileCreatePropertyNotArray","AnchorFileDecompressionFailure","AnchorFileHasUnknownProperty","AnchorFileMapFileHashMissing","AnchorFileMapFileHashNotString","AnchorFileMapFileHashUnsupported","AnchorFileMissingOperationsProperty","AnchorFileMultipleOperationsForTheSameDid","AnchorFileNotJson","AnchorFileOperationCountExceededPaidLimit","AnchorFileRecoverPropertyNotArray","AnchorFileDeactivatePropertyNotArray","AnchorFileUnexpectedPropertyInOperations","AnchorFileWriterLockIPropertyNotString","BatchWriterAlreadyHasOperationForDid","CasFileHashNotValid","CasFileNotAFile","CasFileNotFound","CasFileTooLarge","CasNotReachable","ChunkFileDeltaSizeExceedsLimit","ChunkFileDeltasNotArrayOfStrings","ChunkFileDeltasPropertyNotArray","ChunkFileUnexpectedProperty","CreateOperationMissingOrUnknownProperty","CreateOperationSuffixDataMissingOrNotString","CreateOperationSuffixDataMissingOrUnknownProperty","CreateOperationTypeIncorrect","DeltaMissingOrNotString","DeltaMissingOrUnknownProperty","DidIncorrectPrefix","DidInitialStateValueContainsMoreThanOneDot","DidInitialStateValueContainsNoDot","DidInitialStateValueDoesNotContainTwoParts","DidInvalidDidString","DidLongFormNoInitialStateFound","DidLongFormOnlyInitialStateParameterIsAllowed","DidLongFormOnlyOneQueryParamAllowed","DidNoUniqueSuffix","DidUniqueSuffixFromInitialStateMismatch","DocumentComposerDocumentMissing","DocumentComposerIdNotString","DocumentComposerIdNotUsingBase64UrlCharacterSet","DocumentComposerIdTooLong","DocumentComposerInvalidSignature","DocumentComposerPatchMissingOrUnknownAction","DocumentComposerPatchMissingOrUnknownProperty","DocumentComposerPatchPublicKeyIdNotString","DocumentComposerPatchPublicKeyIdsNotArray","DocumentComposerPatchServiceEndpointNotString","DocumentComposerPatchServiceEndpointsNotArray","DocumentComposerPatchServiceTypeMissingOrUnknown","DocumentComposerPublicKeyIdDuplicated","DocumentComposerPublicKeyJwkMissingOrIncorrectType","DocumentComposerPublicKeyMissingOrUnknownProperty","DocumentComposerPublicKeysNotArray","DocumentComposerPublicKeyTypeMissingOrIncorrectType","DocumentComposerPublicKeyPurposeMissingOrUnknown","DocumentComposerPublicKeyPurposeExceedsMaxLength","DocumentComposerPublicKeyInvalidPurpose","DocumentComposerPatchServiceEndpointIdsNotArray","DocumentComposerPatchServiceEndpointServiceEndpointNotString","DocumentComposerPatchServiceEndpointServiceEndpointNotValidUrl","DocumentComposerPatchServiceEndpointServiceEndpointTooLong","DocumentComposerPatchServiceEndpointTypeNotString","DocumentComposerPatchServiceEndpointTypeTooLong","DocumentComposerServiceEndpointMissingOrUnknownProperty","DocumentComposerServiceNotArray","DocumentComposerUnknownPropertyInDocument","DocumentComposerUpdateOperationDocumentPatchesNotArray","DocumentIncorretEncodedFormat","DocumentNotJson","DocumentNotValidOriginalDocument","EncoderValidateBase64UrlStringInputNotBase64UrlString","EncoderValidateBase64UrlStringInputNotString","JwkHasUnknownProperty","JwkMissingOrInvalidCrv","JwkMissingOrInvalidKty","JwkMissingOrInvalidTypeX","JwkMissingOrInvalidTypeY","JwkUndefined","JwsCompactJwsInvalid","JwsCompactJwsNotString","JwsFailedSignatureValidation","JwsPayloadNotBase64UrlString","JwsProtectedHeaderMissingOrIncorrectAlg","JwsProtectedHeaderMissingOrUnknownProperty","JwsSignatureNotBase64UrlString","MapFileChunkHasMissingOrUnknownProperty","MapFileChunksPropertyDoesNotHaveExactlyOneElement","MapFileChunksPropertyMissingOrIncorrectType","MapFileDecompressionFailure","MapFileHasUnknownProperty","MapFileMultipleOperationsForTheSameDid","MapFileNotJson","MapFileOperationsPropertyHasMissingOrUnknownProperty","MapFileUpdateOperationsNotArray","MultihashNotLatestSupportedHashAlgorithm","MultihashUnsupportedHashAlgorithm","OperationCreateInvalidDidDocument","OperationCountLessThanZero","OperationCreatePayloadHasMissingOrInvalidNextRecoveryCommitment","OperationCreatePayloadHasMissingOrInvalidNextUpdateCommitment","OperationCreatePayloadMissingOrUnknownProperty","OperationDocumentPatchesMissing","OperationPayloadMissingOrIncorrectType","OperationProcessorCreateOperationDoesNotHaveRevealValue","OperationProcessorUnknownOperationType","OperationTypeUnknownOrMissing","QueueingMultipleOperationsPerDidNotAllowed","RecoverOperationMissingOrInvalidDidUniqueSuffix","RecoverOperationMissingOrUnknownProperty","RecoverOperationSignedDataMissingOrUnknownProperty","RecoverOperationTypeIncorrect","RequestHandlerDeltaExceedsMaximumSize","RequestHandlerUnknownOperationType","DeactivateOperationMissingOrInvalidDidUniqueSuffix","DeactivateOperationMissingOrUnknownProperty","DeactivateOperationSignedDataMissingOrUnknownProperty","DeactivateOperationSignedDidUniqueSuffixMismatch","DeactivateOperationTypeIncorrect","TransactionFeePaidInvalid","TransactionFeePaidLessThanNormalizedFee","TransactionProcessorPaidOperationCountExceedsLimit","TransactionsNotInSameBlock","UpdateOperationMissingDidUniqueSuffix","UpdateOperationMissingOrUnknownProperty","UpdateOperationSignedDataHasMissingOrUnknownProperty","UpdateOperationTypeIncorrect","ValueTimeLockVerifierInvalidNumberOfOperations","ValueTimeLockVerifierTransactionTimeOutsideLockRange","ValueTimeLockVerifierTransactionWriterLockOwnerMismatch","BlockchainTimeOutOfRange","InvalidTransactionNumberOrTimeHash","NotEnoughBalanceForWrite","SpendingCapPerPeriodReached","ValueTimeLockNotFound","SidetreeError","code","message","Object","setPrototypeOf","prototype","createFromError","err","undefined","stringify","error","JSON","getOwnPropertyNames","Error","protocolParameters","hashAlgorithmInMultihashCode","maxAnchorFileSizeInBytes","maxChunkFileSizeInBytes","maxDeltaSizeInBytes","maxMapFileSizeInBytes","maxNumberOfOperationsForNoValueTimeLock","maxNumberOfOperationsPerTransactionTime","maxNumberOfTransactionsPerTransactionTime","maxOperationsPerBatch","normalizedFeeToPerOperationFeeMultiplier","valueTimeLockAmountMultiplier","AnchoredDataSerializer","serialize","dataToBeAnchored","anchorString","numberOfOperations","delimiter","anchorFileHash","deserialize","serializedData","splitData","split","length","ErrorCode","parsePositiveInteger","input","isPositiveInteger","test","Number","Encoder","encode","content","encodedContent","base64url","decodeAsBuffer","validateBase64UrlString","toBuffer","decodeAsString","decodeBase64UrlAsString","decode","isBase64UrlString","canonicalize","require","JsonCanonicalizer","canonicalizeAsBuffer","canonicalizedString","contentBuffer","Buffer","from","multihashes","Multihash","hash","ProtocolParameters","crypto","update","digest","hashAlgorithmName","codes","multihash","canonicalizeThenHashThenEncode","multihashEncodedString","hashThenEncode","multihashBuffer","getHashAlgorithmCode","verifyHashComputedUsingLatestSupportedAlgorithm","latestSupportedHashAlgorithmCode","isLatestSupportedHashFormat","isComputedUsingHashAlgorithm","expectedHashAlgorithmInMultihashCode","isValidHash","encodedMultihash","verify","console","log","canonicalizeAndVerify","hashAlgorithmCode","actualHashBuffer","compare","ReadableStream","readAll","stream","alloc","on","chunk","read","concat","readBody","Promise","resolve","reject","SortedArray","binarySearch","sortedArray","searchItem","lowerBoundaryIndex","upperBoundaryIndex","middleIndex","Math","floor","comparisonResult"],"mappings":"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"}