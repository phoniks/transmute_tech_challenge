{"code":"import express from 'express';\r\nimport session from 'express-session';\r\nimport bodyParser from 'body-parser';\r\nimport flash from 'express-flash';\r\nimport mongo from 'connect-mongo';\r\nimport path from 'path';\r\nimport { operations, readDID, getSideTreeVersion } from './controllers/sidetree';\r\nimport { blockchain } from './controllers/ethereum';\r\nimport { cas } from './controllers/ipfs';\r\nconst appServer = () => { };\r\nrequire('dotenv').config();\r\nconst secret = process.env.SESSION_SECRET ? process.env.SESSION_SECRET : 'somesecretthingthatyoushouldntshare';\r\nconst databaseURL = process.env.DB_URL ? process.env.DB_URL : \"mongoURL\";\r\nconst MongoStore = mongo(session);\r\nconst app = express();\r\napp.set(\"port\", process.env.PORT || 3000);\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(session({\r\n    resave: true,\r\n    saveUninitialized: true,\r\n    secret: secret,\r\n    store: new MongoStore({\r\n        url: databaseURL,\r\n        autoReconnect: true\r\n    })\r\n}));\r\napp.use(flash());\r\napp.use(express.static(path.join(__dirname, \"public\"), { maxAge: 31557600000 }));\r\n/**\r\n * Primary app route.\r\n */\r\napp.get(\"/\", appServer);\r\n/**\r\n * Sidetree API.\r\n */\r\napp.post(\"/operations\", operations);\r\napp.get(\"/identifiers/:did\", readDID);\r\napp.get(\"/version\", getSideTreeVersion);\r\n/**\r\n * Blockchain API.\r\n */\r\napp.get(\"/blockchain/time\", blockchain.getLatestTime);\r\napp.get(\"​/blockchain​/time​/:time-hash\", blockchain.getLatestTime);\r\napp.get(\"/blockchain​/transactions\", (req, res, next) => {\r\n    const transaction = bodyParser.json(req.body);\r\n    blockchain._getTransactions(transaction.startBlock, transaction.endBlock);\r\n});\r\napp.post(\"/blockchain/transactions\", blockchain.write);\r\napp.post(\"/blockchain/transactions/first-valid\", blockchain.getFirstValidTransaction);\r\napp.get(\"/blockchain/fee\", blockchain.getFee);\r\napp.get(\"/blockchain/locks/:lock-identifier\", blockchain.getValueTimeLock);\r\napp.get(\"/blockchain/writer-lock\", blockchain.getWriterValueTimeLock);\r\napp.post(\"/blockchain/version\", blockchain.getServiceVersion);\r\n/**\r\n * CAS API.\r\n */\r\napp.post(\"/cas\", cas.write);\r\napp.get(\"/cas/version\", cas.getServiceVersion);\r\napp.get(\"/cas/:hash\", cas.write);\r\nexport default app;\r\n//# sourceMappingURL=index.js.map","references":["/Users/johnhopkins/transmute_tech_challenge/server/node_modules/@types/express/index.d.ts","/Users/johnhopkins/transmute_tech_challenge/server/node_modules/@types/express-session/index.d.ts","/Users/johnhopkins/transmute_tech_challenge/server/node_modules/@types/body-parser/index.d.ts","/Users/johnhopkins/transmute_tech_challenge/server/node_modules/@types/express-flash/index.d.ts","/Users/johnhopkins/transmute_tech_challenge/server/node_modules/connect-mongo/src/types.d.ts","/Users/johnhopkins/transmute_tech_challenge/server/src/controllers/sidetree.ts","/Users/johnhopkins/transmute_tech_challenge/server/src/controllers/ethereum.ts","/Users/johnhopkins/transmute_tech_challenge/server/src/controllers/ipfs.ts","/Users/johnhopkins/transmute_tech_challenge/server/node_modules/dotenv/types/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/johnhopkins/transmute_tech_challenge/server/index.d.ts","writeByteOrderMark":false,"text":"declare const app: import(\"express-serve-static-core\").Express;\r\nexport default app;\r\n"}}
