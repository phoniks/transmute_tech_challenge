/// <reference types="node" />
import * as common from '@transmute/did-key-common';
import { X25519KeyPair } from '@transmute/did-key-x25519';
export declare class Ed25519KeyPair {
    id: string;
    type: string;
    controller: string;
    publicKeyBuffer: Buffer;
    privateKeyBuffer?: Buffer;
    static fingerprintFromPublicKey(keypair: common.types.KeyPairJwk | common.types.KeyPairBase58): string;
    static generate(options: common.types.KeyPairGenerateOptions): Promise<Ed25519KeyPair>;
    static fromFingerprint({ fingerprint }: any): Ed25519KeyPair;
    static from(options: common.types.KeyPairBase58 | common.types.KeyPairJwk): Ed25519KeyPair;
    constructor(options?: any);
    publicNode(): any;
    fingerprint(): string;
    verifyFingerprint(fingerprint: any): {
        error: any;
        valid: boolean;
    } | {
        valid: true;
        error?: undefined;
    };
    toJwk(exportPrivateKey?: boolean): Promise<{
        kid: any;
        crv: string;
        x: any;
        kty: string;
    }>;
    toX25519KeyPair(exportPrivateKey?: boolean): X25519KeyPair;
    toKeyPair(exportPrivateKey?: boolean): any;
    toJsonWebKeyPair(exportPrivateKey?: boolean): any;
    signer(): {
        sign({ data }: any): Promise<Uint8Array>;
    };
    verifier(): {
        verify({ data, signature }: any): Promise<boolean>;
    };
}
