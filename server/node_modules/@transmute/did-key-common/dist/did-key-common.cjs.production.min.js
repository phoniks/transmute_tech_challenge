"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r=e(require("base64url")),t=e(require("canonicalize"));function n(){return(n=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}var i=function(e,r){var t;switch(void 0===r&&(r="application/did+ld+json"),r){case"application/did+json":t=e.toJsonWebKeyPair();break;case"*/*":case"application/did+ld+json":t=e.toKeyPair();break;default:throw new Error("This implementation of did:key does not support: "+r)}return t},o=function(e,r){void 0===r&&(r="application/did+ld+json");try{var t=function(){return n({"@context":["https://www.w3.org/ns/did/v1",{"@base":o}],id:o},u)},o="did:key:"+e.fingerprint(),c=i(e,r),u={verificationMethod:[c]};e.verifier&&(u=n({},u,{authentication:[c.id],assertionMethod:[c.id],capabilityInvocation:[c.id],capabilityDelegation:[c.id]})),e.deriveSecret&&(u=n({},u,{keyAgreement:[c.id]}));var a=function(){if("Ed25519VerificationKey2018"===e.type)return Promise.resolve(e.toX25519KeyPair(!1)).then((function(e){var t=i(e,r);u=n({},u,{verificationMethod:[].concat(u.verificationMethod,[t]),keyAgreement:[t.id]})}))}();return Promise.resolve(a&&a.then?a.then(t):t())}catch(e){return Promise.reject(e)}};exports.Jws={__proto__:null,createJws:function(e,n,i){try{var o=r.encode(t(i))+"."+r.encode(t(n));return Promise.resolve(e.sign(Buffer.from(o))).then((function(e){return o+"."+r.encode(Buffer.from(e))}))}catch(e){return Promise.reject(e)}},verifyJws:function(e,t){try{var n=t.split("."),i=n[2];return Promise.resolve(e.verify(Buffer.from(n[0]+"."+n[1]),r.toBuffer(i)))}catch(e){return Promise.reject(e)}},createDetachedJws:function(e,i,o){try{var c=r.encode(t(n({},o,{b64:!1,crit:["b64"]}))),u=new Uint8Array(Buffer.concat([Buffer.from(c,"utf-8"),Buffer.from(".","utf-8"),i]));return Promise.resolve(e.sign(Buffer.from(u))).then((function(e){var t=r.encode(Buffer.from(e));return c+".."+t}))}catch(e){return Promise.reject(e)}},verifyDetachedJws:function(e,t,n){try{var i=n.split(".."),o=i[1],c=new Uint8Array(Buffer.concat([Buffer.from(i[0],"utf-8"),Buffer.from(".","utf-8"),t]));return Promise.resolve(e.verify(Buffer.from(c),r.toBuffer(o)))}catch(e){return Promise.reject(e)}}},exports.getGet=function(e){return function(r){var t=void 0===r?{}:r,n=t.did,i=t.url;try{if(!(n=n||i))throw new TypeError('"did" must be a string.');return Promise.resolve(e(n)).then((function(e){return e.didDocument}))}catch(e){return Promise.reject(e)}}},exports.getResolve=function(e){return function(r,t){void 0===t&&(t={accept:"application/did+ld+json"});try{var n=r.split("#")[0].split("did:key:").pop();return Promise.resolve(e.fromFingerprint({fingerprint:n})).then((function(e){return Promise.resolve(o(e,t.accept)).then((function(e){return{didDocument:e,didDocumentMetaData:{"content-type":t.accept},didResolutionMetaData:{}}}))}))}catch(e){return Promise.reject(e)}}},exports.getVerificationMethod=i,exports.keyToDidDoc=o,exports.types={__proto__:null,staticImplements:function(){return function(e){return e}}};
//# sourceMappingURL=did-key-common.cjs.production.min.js.map
