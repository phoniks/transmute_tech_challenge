/// <reference types="node" />
import * as common from '@transmute/did-key-common';
export declare class Secp256k1KeyPair {
    id: string;
    type: string;
    controller: string;
    publicKeyBuffer: Buffer;
    privateKeyBuffer?: Buffer;
    static fingerprintFromPublicKey(keypair: common.types.KeyPairJwk | common.types.KeyPairBase58): string;
    static generate(options?: any): Promise<Secp256k1KeyPair>;
    static from(options: any): Promise<Secp256k1KeyPair>;
    static fromFingerprint({ fingerprint }: any): Secp256k1KeyPair;
    constructor(options?: any);
    publicNode(): any;
    signer(): {
        sign({ data }: any): Promise<any>;
    };
    verifier(): {
        verify({ data, signature }: any): Promise<boolean>;
    };
    fingerprint(): string;
    verifyFingerprint(fingerprint: string): {
        error: any;
        valid: boolean;
    } | {
        valid: true;
        error?: undefined;
    };
    toJwk(_private?: boolean): any;
    toHex(_private?: boolean): Promise<any>;
    toKeyPair(exportPrivate?: boolean): any;
    toJsonWebKeyPair(exportPrivate?: boolean): any;
}
