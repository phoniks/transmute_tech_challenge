{"version":3,"file":"server.cjs.development.js","sources":["../src/utils/config.ts","../src/controllers/ethereum.ts","../src/controllers/sidetree.ts","../src/controllers/ipfs.ts","../src/index.ts"],"sourcesContent":["import * as dotenv from \"dotenv\";\n\ndotenv.config();\nlet path;\nswitch (process.env.NODE_ENV) {\n  case \"test\":\n    path = `${__dirname}/../../.env.test`;\n    break;\n  case \"production\":\n    path = `${__dirname}/../../.env.production`;\n    break;\n  default:\n    path = `${__dirname}/../.env`;\n}\ndotenv.config({ path: path });\n\nexport const APP_ID = process.env.APP_ID;\nexport const LOG_LEVEL = process.env.LOG_LEVEL;\n\nexport const ELEMENT_PROVIDER = \"http://127.0.0.1:8545\"\nexport const ELEMENT_IPFS_MULTIADDR = process.env.ELEMENT_IPFS_MULTIADDR\nexport const ELEMENT_CONTRACT_ADDRESS = \"0x74435D1c1018798243d201B5f4e6187c62562E72\"\nexport const DATABASE_URL = 'mongodb://localhost:27017/element-test'\nexport const DATABASE_NAME = \"element-test\"\nexport const SESSION_SECRET = \"379tE844LHttpRe1395entTa3243entTa16219lidRespons8\"\nexport const MNEMONIC = \"proud ancient burger emotion verify salad mandate work pizza daughter live section\"","import { EthereumLedger } from '@sidetree/ethereum'\nimport { ELEMENT_CONTRACT_ADDRESS, ELEMENT_PROVIDER } from '../utils/config'\nimport web3 from 'web3'\nconst Web3 = new web3(new web3.providers.HttpProvider(ELEMENT_PROVIDER))\n\nconst Ethereum = new EthereumLedger(Web3, ELEMENT_CONTRACT_ADDRESS)\nEthereum.initialize()\n\nexport { Ethereum as blockchain }\n","import {Element} from '@sidetree/element'\nimport { blockchain } from './ethereum'\nconst config = {\n    batchingIntervalInSeconds: 360,\n    contentAddressableStoreServiceUri: '', \n    didMethodName: 'elem:ropsten', \n    maxConcurrentDownloads:    1 ,\n    observingIntervalInSeconds: 360,\n    mongoDbConnectionString: \"mongodb://localhost:27017/\", \n    databaseName: 'element-test',\n}\nconst protocolVersions:any = []\n\nconsole.log(blockchain)\nconst sidetree = new Element(config, protocolVersions, blockchain )\n\nsidetree.initialize() \n\nconst operations = sidetree.handleOperationRequest\nconst readDID = sidetree.handleResolveRequest\nconst getSideTreeVersion = sidetree.handleGetVersionRequest\n\nexport { operations, readDID, getSideTreeVersion }","import {IpfsCasWithCache} from '@sidetree/cas'\nconst IpfsAddress = process.env.ELEMENT_IPFS_MULTIADDR ? process.env.ELEMENT_IPFS_MULTIADDR : \"IPFS_ADDY\"\nimport {DATABASE_URL, DATABASE_NAME} from '../utils/config'\n\nconst Cas = new IpfsCasWithCache(IpfsAddress, DATABASE_URL!, DATABASE_NAME)\nCas.initialize()\nexport { Cas as cas} ","import express from 'express'\nimport session from 'express-session'\nimport bodyParser from 'body-parser'\nimport flash from 'express-flash'\nimport mongo from 'connect-mongo'\nimport path from 'path'\nimport { operations, readDID, getSideTreeVersion } from './controllers/sidetree'\nimport { blockchain } from './controllers/ethereum'\nimport { cas } from './controllers/ipfs'\nimport {DATABASE_URL} from './utils/config'\n\n\nconst appServer = () => {}\nconst secret = process.env.SESSION_SECRET ? process.env.SESSION_SECRET : 'somesecretthingthatyoushouldntshare'\nconst MongoStore = mongo(session);\nconst app = express();\napp.set(\"port\", process.env.PORT || 3000);\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(session({\n    resave: true,\n    saveUninitialized: true,\n    secret: secret,\n    store: new MongoStore({\n        url: DATABASE_URL!,\n        autoReconnect: true\n    }) \n}));\n\napp.use(flash());\n\napp.use(\n    express.static(path.join(__dirname, \"public\"), { maxAge: 31557600000 })\n);\n\n/**\n * Primary app route.\n */\napp.get(\"/\", appServer)\n\n\n/**\n * Sidetree API.\n */\napp.post(\"/operations\", operations);\napp.get(\"/identifiers/:did\", readDID)\napp.get(\"/version\", getSideTreeVersion);\n\n/**\n * Blockchain API.\n */\napp.get(\"/blockchain/time\", blockchain.getLatestTime);\napp.get(\"​/blockchain​/time​/:time-hash\", blockchain.getLatestTime);\napp.get(\"/blockchain​/transactions\", (req) => {\n    const transaction = req.body\n    blockchain._getTransactions(transaction.startBlock, transaction.endBlock)\n});\napp.post(\"/blockchain/transactions\", (req) => {\n    blockchain.write(req.body.anchorString, req.body._fee)\n});\napp.post(\"/blockchain/transactions/first-valid\", blockchain.getFirstValidTransaction);\napp.get(\"/blockchain/fee\", blockchain.getFee);\napp.get(\"/blockchain/locks/:lock-identifier\", blockchain.getValueTimeLock);\napp.get(\"/blockchain/writer-lock\", blockchain.getWriterValueTimeLock);\napp.post(\"/blockchain/version\", blockchain.getServiceVersion);\n/**\n * CAS API.\n */\napp.post(\"/cas\", cas.write);\napp.get(\"/cas/version\", cas.getServiceVersion)\napp.get(\"/cas/:hash\", cas.write)\n\nexport default app;\n\napp.listen(3000)\nconsole.log('api listening on port 3000')"],"names":["dotenv","path","process","__dirname","APP_ID","env","LOG_LEVEL","ELEMENT_PROVIDER","ELEMENT_IPFS_MULTIADDR","ELEMENT_CONTRACT_ADDRESS","DATABASE_URL","DATABASE_NAME","Web3","web3","providers","HttpProvider","Ethereum","EthereumLedger","initialize","config","batchingIntervalInSeconds","contentAddressableStoreServiceUri","didMethodName","maxConcurrentDownloads","observingIntervalInSeconds","mongoDbConnectionString","databaseName","protocolVersions","console","log","blockchain","sidetree","Element","operations","handleOperationRequest","readDID","handleResolveRequest","getSideTreeVersion","handleGetVersionRequest","IpfsAddress","Cas","IpfsCasWithCache","appServer","secret","SESSION_SECRET","MongoStore","mongo","session","app","express","set","PORT","use","bodyParser","json","urlencoded","extended","resave","saveUninitialized","store","url","autoReconnect","flash","join","maxAge","get","post","getLatestTime","req","transaction","body","_getTransactions","startBlock","endBlock","write","anchorString","_fee","getFirstValidTransaction","getFee","getValueTimeLock","getWriterValueTimeLock","getServiceVersion","cas","listen"],"mappings":";;;;;;;;;;;;;;;;;;AAEAA,aAAA;AACA,IAAIC,IAAJ;;AACA,QAAQC,aAAR;AACE,OAAK,MAAL;AACED,IAAAA,IAAI,GAAME,SAAN,qBAAJ;AACA;;AACF,OAAK,YAAL;AACEF,IAAAA,IAAI,GAAME,SAAN,2BAAJ;AACA;;AACF;AACEF,IAAAA,IAAI,GAAME,SAAN,aAAJ;AARJ;;AAUAH,aAAA,CAAc;AAAEC,EAAAA,IAAI,EAAEA;AAAR,CAAd;AAEO,IAAMG,MAAM,GAAGF,OAAO,CAACG,GAAR,CAAYD,MAA3B;AACA,IAAME,SAAS,GAAGJ,OAAO,CAACG,GAAR,CAAYC,SAA9B;AAEA,IAAMC,gBAAgB,GAAG,uBAAzB;AACA,IAAMC,sBAAsB,GAAGN,OAAO,CAACG,GAAR,CAAYG,sBAA3C;AACA,IAAMC,wBAAwB,GAAG,4CAAjC;AACA,IAAMC,YAAY,GAAG,wCAArB;AACA,IAAMC,aAAa,GAAG,cAAtB;;ACpBP,IAAMC,IAAI,gBAAG,IAAIC,IAAJ,eAAS,IAAIA,IAAI,CAACC,SAAL,CAAeC,YAAnB,CAAgCR,gBAAhC,CAAT,CAAb;AAEA,IAAMS,QAAQ,gBAAG,IAAIC,uBAAJ,CAAmBL,IAAnB,EAAyBH,wBAAzB,CAAjB;AACAO,QAAQ,CAACE,UAAT;;ACJA,IAAMC,MAAM,GAAG;AACXC,EAAAA,yBAAyB,EAAE,GADhB;AAEXC,EAAAA,iCAAiC,EAAE,EAFxB;AAGXC,EAAAA,aAAa,EAAE,cAHJ;AAIXC,EAAAA,sBAAsB,EAAK,CAJhB;AAKXC,EAAAA,0BAA0B,EAAE,GALjB;AAMXC,EAAAA,uBAAuB,EAAE,4BANd;AAOXC,EAAAA,YAAY,EAAE;AAPH,CAAf;AASA,IAAMC,gBAAgB,GAAO,EAA7B;AAEAC,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,IAAMC,QAAQ,gBAAG,IAAIC,eAAJ,CAAYb,MAAZ,EAAoBQ,gBAApB,EAAsCG,QAAtC,CAAjB;AAEAC,QAAQ,CAACb,UAAT;AAEA,IAAMe,UAAU,GAAGF,QAAQ,CAACG,sBAA5B;AACA,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,oBAAzB;AACA,IAAMC,kBAAkB,GAAGN,QAAQ,CAACO,uBAApC;;ACnBA,IAAMC,WAAW,GAAGrC,OAAO,CAACG,GAAR,CAAYG,sBAAZ,GAAqCN,OAAO,CAACG,GAAR,CAAYG,sBAAjD,GAA0E,WAA9F;AACA,AAEA,IAAMgC,GAAG,gBAAG,IAAIC,oBAAJ,CAAqBF,WAArB,EAAkC7B,YAAlC,EAAiDC,aAAjD,CAAZ;AACA6B,GAAG,CAACtB,UAAJ;;ACOA,IAAMwB,SAAS,GAAG,SAAZA,SAAY,KAAlB;;AACA,IAAMC,MAAM,GAAGzC,OAAO,CAACG,GAAR,CAAYuC,cAAZ,GAA6B1C,OAAO,CAACG,GAAR,CAAYuC,cAAzC,GAA0D,qCAAzE;AACA,IAAMC,UAAU,gBAAGC,KAAK,CAACC,OAAD,CAAxB;AACA,IAAMC,GAAG,gBAAGC,OAAO,EAAnB;AACAD,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBhD,OAAO,CAACG,GAAR,CAAY8C,IAAZ,IAAoB,IAApC;AACAH,GAAG,CAACI,GAAJ,CAAQC,UAAU,CAACC,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQC,UAAU,CAACE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACI,GAAJ,CAAQL,OAAO,CAAC;AACZU,EAAAA,MAAM,EAAE,IADI;AAEZC,EAAAA,iBAAiB,EAAE,IAFP;AAGZf,EAAAA,MAAM,EAAEA,MAHI;AAIZgB,EAAAA,KAAK,EAAE,IAAId,UAAJ,CAAe;AAClBe,IAAAA,GAAG,EAAElD,YADa;AAElBmD,IAAAA,aAAa,EAAE;AAFG,GAAf;AAJK,CAAD,CAAf;AAUAb,GAAG,CAACI,GAAJ,CAAQU,KAAK,EAAb;AAEAd,GAAG,CAACI,GAAJ,CACIH,OAAO,UAAP,CAAehD,MAAI,CAAC8D,IAAL,CAAU5D,SAAV,EAAqB,QAArB,CAAf,EAA+C;AAAE6D,EAAAA,MAAM,EAAE;AAAV,CAA/C,CADJ;AAIA;;;;AAGAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAavB,SAAb;AAGA;;;;AAGAM,GAAG,CAACkB,IAAJ,CAAS,aAAT,EAAwBjC,UAAxB;AACAe,GAAG,CAACiB,GAAJ,CAAQ,mBAAR,EAA6B9B,OAA7B;AACAa,GAAG,CAACiB,GAAJ,CAAQ,UAAR,EAAoB5B,kBAApB;AAEA;;;;AAGAW,GAAG,CAACiB,GAAJ,CAAQ,kBAAR,EAA4BnC,QAAU,CAACqC,aAAvC;AACAnB,GAAG,CAACiB,GAAJ,CAAQ,gCAAR,EAA0CnC,QAAU,CAACqC,aAArD;AACAnB,GAAG,CAACiB,GAAJ,CAAQ,2BAAR,EAAqC,UAACG,GAAD;AACjC,MAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;;AACAxC,EAAAA,QAAU,CAACyC,gBAAX,CAA4BF,WAAW,CAACG,UAAxC,EAAoDH,WAAW,CAACI,QAAhE;AACH,CAHD;AAIAzB,GAAG,CAACkB,IAAJ,CAAS,0BAAT,EAAqC,UAACE,GAAD;AACjCtC,EAAAA,QAAU,CAAC4C,KAAX,CAAiBN,GAAG,CAACE,IAAJ,CAASK,YAA1B,EAAwCP,GAAG,CAACE,IAAJ,CAASM,IAAjD;AACH,CAFD;AAGA5B,GAAG,CAACkB,IAAJ,CAAS,sCAAT,EAAiDpC,QAAU,CAAC+C,wBAA5D;AACA7B,GAAG,CAACiB,GAAJ,CAAQ,iBAAR,EAA2BnC,QAAU,CAACgD,MAAtC;AACA9B,GAAG,CAACiB,GAAJ,CAAQ,oCAAR,EAA8CnC,QAAU,CAACiD,gBAAzD;AACA/B,GAAG,CAACiB,GAAJ,CAAQ,yBAAR,EAAmCnC,QAAU,CAACkD,sBAA9C;AACAhC,GAAG,CAACkB,IAAJ,CAAS,qBAAT,EAAgCpC,QAAU,CAACmD,iBAA3C;AACA;;;;AAGAjC,GAAG,CAACkB,IAAJ,CAAS,MAAT,EAAiBgB,GAAG,CAACR,KAArB;AACA1B,GAAG,CAACiB,GAAJ,CAAQ,cAAR,EAAwBiB,GAAG,CAACD,iBAA5B;AACAjC,GAAG,CAACiB,GAAJ,CAAQ,YAAR,EAAsBiB,GAAG,CAACR,KAA1B;AAEA,AAEA1B,GAAG,CAACmC,MAAJ,CAAW,IAAX;AACAvD,OAAO,CAACC,GAAR,CAAY,4BAAZ;;;;"}